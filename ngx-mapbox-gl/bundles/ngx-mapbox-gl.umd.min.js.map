{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ngx-mapbox-gl/lib/map/map.service.ts","ng://ngx-mapbox-gl/lib/control/control.component.ts","ng://ngx-mapbox-gl/lib/control/attribution-control.directive.ts","ng://ngx-mapbox-gl/lib/control/fullscreen-control.directive.ts","ng://ngx-mapbox-gl/lib/control/geocoder-control.directive.ts","ng://ngx-mapbox-gl/lib/control/geolocate-control.directive.ts","ng://ngx-mapbox-gl/lib/control/navigation-control.directive.ts","ng://ngx-mapbox-gl/lib/control/scale-control.directive.ts","ng://ngx-mapbox-gl/lib/marker/marker.component.ts","ng://ngx-mapbox-gl/lib/source/geojson/geojson-source.component.ts","ng://ngx-mapbox-gl/lib/source/geojson/feature.component.ts","ng://ngx-mapbox-gl/lib/draggable/draggable.directive.ts","ng://ngx-mapbox-gl/lib/image/image.component.ts","ng://ngx-mapbox-gl/lib/layer/layer.component.ts","ng://ngx-mapbox-gl/lib/map/map.component.ts","ng://ngx-mapbox-gl/lib/marker-cluster/marker-cluster.component.ts","ng://ngx-mapbox-gl/lib/popup/popup.component.ts","ng://ngx-mapbox-gl/lib/source/canvas-source.component.ts","ng://ngx-mapbox-gl/lib/source/image-source.component.ts","ng://ngx-mapbox-gl/lib/source/raster-source.component.ts","ng://ngx-mapbox-gl/lib/source/vector-source.component.ts","ng://ngx-mapbox-gl/lib/source/video-source.component.ts","ng://ngx-mapbox-gl/lib/ngx-mapbox-gl.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","MAPBOX_API_KEY","InjectionToken","MglResizeEventEmitter","MapService","zone","AsyncSubject","Subscription","mapCreated$","mapCreated","asObservable","mapLoaded$","mapLoaded","setup","options","_this","onStable","pipe","first","subscribe","MapboxGl","accessToken","customMapboxApiUrl","createMap","mapOptions","hookEvents","mapEvents","undefined","complete","destroyMap","subscription","unsubscribe","mapInstance","remove","updateMinZoom","minZoom","runOutsideAngular","setMinZoom","updateMaxZoom","maxZoom","setMaxZoom","updateScrollZoom","status","scrollZoom","enable","disable","updateDragRotate","dragRotate","updateTouchZoomRotate","touchZoomRotate","updateDoubleClickZoom","doubleClickZoom","updateKeyboard","keyboard","updateDragPan","dragPan","updateBoxZoom","boxZoom","updateStyle","style","setStyle","updateMaxBounds","maxBounds","setMaxBounds","changeCanvasCursor","cursor","getCanvasContainer","queryRenderedFeatures","pointOrBox","parameters","panTo","center","move","movingMethod","movingOptions","zoom","bearing","pitch","getZoom","getCenter","getBearing","getPitch","addLayer","layer","bindEvents","before","keys","layerOptions","forEach","key","tkey","layerEvents","click","observers","on","id","evt","run","emit","mouseEnter","mouseLeave","mouseMove","removeLayer","layerId","layerIdsToRemove","addMarker","marker","offset","markersOptions","anchor","draggable","element","childNodes","markerInstance","MapboxGl.Marker","markersEvents","dragStart","event","target","drag","dragEnd","setLngLat","feature","coordinates","addTo","removeMarker","markersToRemove","createPopup","popup","popupOptions","popupInstance","MapboxGl.Popup","setDOMContent","popupEvents","close","open","addPopupToMap","lngLat","skipOpenEvent","_listeners","addPopupToMarker","setPopup","removePopupFromMap","skipCloseEvent","popupsToRemove","removePopupFromMarker","addControl","control","position","removeControl","loadAndAddImage","imageId","url","loadImage","error","image","addImage","data","removeImage","imageIdsToRemove","addSource","sourceId","source","getSource","removeSource","sourceIdsToRemove","setAllLayerPaintProperty","paint","setPaintProperty","setAllLayerLayoutProperty","layout","setLayoutProperty","setLayerFilter","filter","setFilter","setLayerBefore","beforeId","moveLayer","setLayerZoomRange","fitBounds","bounds","getCurrentViewportBbox","canvas","getCanvas","w","parseInt","h","upLeft","unproject","toArray","upRight","downRight","downLeft","bbox","polygon","applyChanges","removeLayers","removeSources","removeMarkers","removePopups","removeImages","NgZone","assertNotInAngularZone","MapboxGl.Map","subChanges","onMicrotaskEmpty","subResize","resizeEvent","resize","add","_b","tslib_1.__values","_c","off","events","load","mouseDown","mouseUp","dblClick","mouseOver","mouseOut","contextMenu","touchStart","touchEnd","touchMove","touchCancel","wheel","moveStart","moveEnd","zoomStart","zoomEvt","zoomEnd","rotateStart","rotate","rotateEnd","pitchStart","pitchEvt","pitchEnd","boxZoomStart","boxZoomEnd","boxZoomCancel","webGlContextLost","webGlContextRestored","render","styleData","sourceData","dataLoading","styleDataLoading","sourceDataLoading","obj","prop","split","shift","toString","Injectable","Optional","type","Inject","args","decorators","CustomControl","container","onAdd","onRemove","removeChild","getDefaultPosition","ControlComponent","ngAfterContentInit","content","nativeElement","ngOnDestroy","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","Input","ViewChild","AttributionControlDirective","ngOnInit","Error","compact","AttributionControl","Directive","Host","FullscreenControlDirective","FullscreenControl","MapboxGeocoder","require","MAPBOX_GEOCODER_API_KEY","GeocoderControlDirective","EventEmitter","proximity","country","placeholder","types","flyTo","minLength","limit","language","localGeocoder","geocoder","searchInput","query","ngOnChanges","changes","isFirstChange","setProximity","currentValue","results","loading","clear","Output","GeolocateControlDirective","positionOptions","fitBoundsOptions","trackUserLocation","showUserLocation","GeolocateControl","NavigationControlDirective","showCompass","showZoom","NavigationControl","ScaleControlDirective","setUnit","maxWidth","unit","ScaleControl","MarkerComponent","setDraggable","ngAfterViewInit","togglePopup","updateCoordinates","encapsulation","ViewEncapsulation","None","GeoJSONSourceComponent","Subject","features","init","sub","fromEvent","sourceAdded","setData","addFeature","updateFeatureData","removeFeature","collection","index","indexOf","splice","getNewFeatureId","featureIdCounter","maxzoom","minzoom","buffer","tolerance","cluster","clusterRadius","clusterMaxZoom","debounceTime","FeatureComponent","geometry","properties","forwardRef","DraggableDirective","ReplaySubject","enter$","leave$","updateCoords","console","warn","markerElement","children","bind","handleDraggable","destroyed$","moving","inside","mouseUp$","dragStart$","takeUntil","filterFeature","tap","switchMap","dragging$","dragEnd$","take","lng","lat","point","layers","ImageComponent","imageAdded","_a","loaded","error_1","LayerComponent","getLayer","layerAdded","metadata","source-layer","sourceLayer","MapComponent","defineProperty","mapContainer","hash","interactive","bearingSnap","pitchWithRotate","classes","attributionControl","logoPosition","failIfMajorPerformanceCaveat","preserveDrawingBuffer","refreshExpiredTiles","trackResize","renderWorldCopies","maxTileCacheSize","localIdeographFontFamily","transformRequest","cursorStyle","toPromise","centerWithPanTo","panToOptions","providers","PointDirective","MarkerClusterComponent","ChangeDetectorRef","supercluster","radius","extent","nodeSize","log","reduce","initial","map","merge","startWith","updateCluster","currentZoom","Math","round","clusterPoints","getClusters","markForCheck","preserveWhitespaces","ContentChild","read","TemplateRef","ClusterPointDirective","PopupComponent","newlngLat","popupInstanceTmp","isOpen","previousMarker","previousValue","addPopup","closeButton","closeOnClick","CanvasSourceComponent","animate","ImageSourceComponent","RasterSourceComponent","tiles","tileSize","VectorSourceComponent","VideoSourceComponent","urls","NgxMapboxGLModule","withConfig","config","ngModule","provide","useValue","geocoderAccessToken","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { EventEmitter, Inject, Injectable, InjectionToken, NgZone, Optional } from '@angular/core';\nimport bbox from '@turf/bbox';\nimport { polygon } from '@turf/helpers';\nimport * as MapboxGl from 'mapbox-gl';\nimport { AsyncSubject, Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { BBox } from 'supercluster';\nimport { MapEvent, MapImageData, MapImageOptions } from './map.types';\n\nexport const MAPBOX_API_KEY = new InjectionToken('MapboxApiKey');\n\nexport abstract class MglResizeEventEmitter {\n  abstract resizeEvent: Observable<void>;\n}\n\nexport interface SetupMap {\n  accessToken?: string;\n  customMapboxApiUrl?: string;\n  mapOptions: any; // MapboxGl.MapboxOptions\n  mapEvents: MapEvent;\n}\n\nexport interface SetupLayer {\n  layerOptions: MapboxGl.Layer;\n  layerEvents: {\n    click: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseEnter: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseLeave: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseMove: EventEmitter<MapboxGl.MapMouseEvent>;\n  };\n}\n\nexport interface SetupPopup {\n  popupOptions: MapboxGl.PopupOptions;\n  popupEvents: {\n    open: EventEmitter<void>;\n    close: EventEmitter<void>;\n  };\n}\n\nexport interface SetupMarker {\n  markersOptions: {\n    offset?: MapboxGl.PointLike;\n    anchor?: MapboxGl.Anchor;\n    draggable?: boolean;\n    element: HTMLElement;\n    feature?: GeoJSON.Feature<GeoJSON.Point>;\n    lngLat?: MapboxGl.LngLatLike;\n  };\n  markersEvents: {\n    dragStart: EventEmitter<MapboxGl.Marker>;\n    drag: EventEmitter<MapboxGl.Marker>;\n    dragEnd: EventEmitter<MapboxGl.Marker>;\n  };\n}\n\nexport type AllSource = MapboxGl.VectorSource |\n  MapboxGl.RasterSource |\n  MapboxGl.GeoJSONSource |\n  MapboxGl.ImageSourceOptions |\n  MapboxGl.VideoSourceOptions |\n  MapboxGl.GeoJSONSourceRaw |\n  MapboxGl.CanvasSourceOptions;\n\nexport type MovingOptions = MapboxGl.FlyToOptions |\n  (MapboxGl.AnimationOptions & MapboxGl.CameraOptions) |\n  MapboxGl.CameraOptions;\n\n@Injectable()\nexport class MapService {\n  mapInstance: MapboxGl.Map;\n  mapCreated$: Observable<void>;\n  mapLoaded$: Observable<void>;\n  mapEvents: MapEvent;\n\n  private mapCreated = new AsyncSubject<void>();\n  private mapLoaded = new AsyncSubject<void>();\n  private layerIdsToRemove: string[] = [];\n  private sourceIdsToRemove: string[] = [];\n  private markersToRemove: MapboxGl.Marker[] = [];\n  private popupsToRemove: MapboxGl.Popup[] = [];\n  private imageIdsToRemove: string[] = [];\n  private subscription = new Subscription();\n\n  constructor(\n    private zone: NgZone,\n    @Optional() @Inject(MAPBOX_API_KEY) private readonly MAPBOX_API_KEY: string,\n    @Optional() private readonly MglResizeEventEmitter: MglResizeEventEmitter\n  ) {\n    this.mapCreated$ = this.mapCreated.asObservable();\n    this.mapLoaded$ = this.mapLoaded.asObservable();\n  }\n\n  setup(options: SetupMap) {\n    // Need onStable to wait for a potential @angular/route transition to end\n    this.zone.onStable.pipe(first()).subscribe(() => {\n      // Workaround rollup issue\n      this.assign(MapboxGl, 'accessToken', options.accessToken || this.MAPBOX_API_KEY);\n      if (options.customMapboxApiUrl) {\n        this.assign(MapboxGl, 'config.API_URL', options.customMapboxApiUrl);\n      }\n      this.createMap(options.mapOptions);\n      this.hookEvents(options.mapEvents);\n      this.mapEvents = options.mapEvents;\n      this.mapCreated.next(undefined);\n      this.mapCreated.complete();\n    });\n  }\n\n  destroyMap() {\n    this.subscription.unsubscribe();\n    this.mapInstance.remove();\n  }\n\n  updateMinZoom(minZoom: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMinZoom(minZoom);\n    });\n  }\n\n  updateMaxZoom(maxZoom: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMaxZoom(maxZoom);\n    });\n  }\n\n  updateScrollZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.scrollZoom.enable() : this.mapInstance.scrollZoom.disable();\n    });\n  }\n\n  updateDragRotate(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.dragRotate.enable() : this.mapInstance.dragRotate.disable();\n    });\n  }\n\n  updateTouchZoomRotate(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.touchZoomRotate.enable() : this.mapInstance.touchZoomRotate.disable();\n    });\n  }\n\n  updateDoubleClickZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.doubleClickZoom.enable() : this.mapInstance.doubleClickZoom.disable();\n    });\n  }\n\n  updateKeyboard(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.keyboard.enable() : this.mapInstance.keyboard.disable();\n    });\n  }\n\n  updateDragPan(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.dragPan.enable() : this.mapInstance.dragPan.disable();\n    });\n  }\n\n  updateBoxZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.boxZoom.enable() : this.mapInstance.boxZoom.disable();\n    });\n  }\n\n  updateStyle(style: MapboxGl.Style) {\n    // TODO Probably not so simple, write demo/tests\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setStyle(style);\n    });\n  }\n\n  updateMaxBounds(maxBounds: MapboxGl.LngLatBoundsLike) {\n    // TODO Probably not so simple, write demo/tests\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMaxBounds(maxBounds);\n    });\n  }\n\n  changeCanvasCursor(cursor: string) {\n    const canvas = this.mapInstance.getCanvasContainer();\n    canvas.style.cursor = cursor;\n  }\n\n  queryRenderedFeatures(\n    pointOrBox?: MapboxGl.PointLike | MapboxGl.PointLike[],\n    parameters?: { layers?: string[], filter?: any[] }\n  ): GeoJSON.Feature<GeoJSON.GeometryObject>[] {\n    return this.mapInstance.queryRenderedFeatures(pointOrBox, parameters);\n  }\n\n  panTo(center: MapboxGl.LngLatLike, options?: MapboxGl.AnimationOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.panTo(center, options);\n    });\n  }\n\n  move(\n    movingMethod: 'jumpTo' | 'easeTo' | 'flyTo',\n    movingOptions?: MovingOptions,\n    zoom?: number,\n    center?: MapboxGl.LngLatLike,\n    bearing?: number,\n    pitch?: number\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      (<any>this.mapInstance[movingMethod])({\n        ...movingOptions,\n        zoom: zoom ? zoom : this.mapInstance.getZoom(),\n        center: center ? center : this.mapInstance.getCenter(),\n        bearing: bearing ? bearing : this.mapInstance.getBearing(),\n        pitch: pitch ? pitch : this.mapInstance.getPitch()\n      });\n    });\n  }\n\n  addLayer(layer: SetupLayer, bindEvents: boolean, before?: string) {\n    this.zone.runOutsideAngular(() => {\n      Object.keys(layer.layerOptions)\n        .forEach((key: string) => {\n          const tkey = <keyof MapboxGl.Layer>key;\n          if (layer.layerOptions[tkey] === undefined) {\n            delete layer.layerOptions[tkey];\n          }\n        });\n      this.mapInstance.addLayer(layer.layerOptions, before);\n      if (bindEvents) {\n        if (layer.layerEvents.click.observers.length) {\n          this.mapInstance.on('click', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.click.emit(evt);\n            });\n          });\n        }\n        if (layer.layerEvents.mouseEnter.observers.length) {\n          this.mapInstance.on('mouseenter', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.mouseEnter.emit(evt);\n            });\n          });\n        }\n        if (layer.layerEvents.mouseLeave.observers.length) {\n          this.mapInstance.on('mouseleave', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.mouseLeave.emit(evt);\n            });\n          });\n        }\n        if (layer.layerEvents.mouseMove.observers.length) {\n          this.mapInstance.on('mousemove', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.mouseMove.emit(evt);\n            });\n          });\n        }\n      }\n    });\n  }\n\n  removeLayer(layerId: string) {\n    this.layerIdsToRemove.push(layerId);\n  }\n\n  addMarker(marker: SetupMarker) {\n    const options: MapboxGl.MarkerOptions = {\n      offset: marker.markersOptions.offset,\n      anchor: marker.markersOptions.anchor,\n      draggable: !!marker.markersOptions.draggable\n    };\n    if (marker.markersOptions.element.childNodes.length > 0) {\n      options.element = marker.markersOptions.element;\n    }\n    const markerInstance = new MapboxGl.Marker(options);\n    if (marker.markersEvents.dragStart.observers.length) {\n      markerInstance.on('dragstart', (event: { target: MapboxGl.Marker }) =>\n        this.zone.run(() => marker.markersEvents.dragStart.emit(event.target))\n      );\n    }\n    if (marker.markersEvents.drag.observers.length) {\n      markerInstance.on('drag', (event: { target: MapboxGl.Marker }) =>\n        this.zone.run(() => marker.markersEvents.drag.emit(event.target))\n      );\n    }\n    if (marker.markersEvents.dragEnd.observers.length) {\n      markerInstance.on('dragend', (event: { target: MapboxGl.Marker }) =>\n        this.zone.run(() => marker.markersEvents.dragEnd.emit(event.target))\n      );\n    }\n    markerInstance.setLngLat(marker.markersOptions.feature ?\n      marker.markersOptions.feature.geometry!.coordinates :\n      marker.markersOptions.lngLat!\n    );\n    return this.zone.runOutsideAngular(() => {\n      markerInstance.addTo(this.mapInstance);\n      return markerInstance;\n    });\n  }\n\n  removeMarker(marker: MapboxGl.Marker) {\n    this.markersToRemove.push(marker);\n  }\n\n  createPopup(popup: SetupPopup, element: Node) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(popup.popupOptions)\n        .forEach((key) =>\n          (<any>popup.popupOptions)[key] === undefined && delete (<any>popup.popupOptions)[key]);\n      const popupInstance = new MapboxGl.Popup(popup.popupOptions);\n      popupInstance.setDOMContent(element);\n      if (popup.popupEvents.close.observers.length) {\n        popupInstance.on('close', () => {\n          this.zone.run(() => {\n            popup.popupEvents.close.emit();\n          });\n        });\n      }\n      if (popup.popupEvents.open.observers.length) {\n        popupInstance.on('open', () => {\n          this.zone.run(() => {\n            popup.popupEvents.open.emit();\n          });\n        });\n      }\n      return popupInstance;\n    });\n  }\n\n  addPopupToMap(popup: MapboxGl.Popup, lngLat: MapboxGl.LngLatLike, skipOpenEvent = false) {\n    return this.zone.runOutsideAngular(() => {\n      if (skipOpenEvent && (<any>popup)._listeners) {\n        delete (<any>popup)._listeners['open'];\n      }\n      popup.setLngLat(lngLat);\n      popup.addTo(this.mapInstance);\n    });\n  }\n\n  addPopupToMarker(marker: MapboxGl.Marker, popup: MapboxGl.Popup) {\n    return this.zone.runOutsideAngular(() => {\n      marker.setPopup(popup);\n    });\n  }\n\n  removePopupFromMap(popup: MapboxGl.Popup, skipCloseEvent = false) {\n    if (skipCloseEvent && (<any>popup)._listeners) {\n      delete (<any>popup)._listeners['close'];\n    }\n    this.popupsToRemove.push(popup);\n  }\n\n  removePopupFromMarker(marker: MapboxGl.Marker) {\n    return this.zone.runOutsideAngular(() => {\n      marker.setPopup(undefined);\n    });\n  }\n\n  addControl(control: MapboxGl.Control | MapboxGl.IControl, position?: 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left') {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.addControl(<any>control, position);\n    });\n  }\n\n  removeControl(control: MapboxGl.Control | MapboxGl.IControl) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.removeControl(<any>control);\n    });\n  }\n\n  async loadAndAddImage(imageId: string, url: string, options?: MapImageOptions) {\n    return this.zone.runOutsideAngular(() => {\n      return new Promise((resolve, reject) => {\n        this.mapInstance.loadImage(url, (error: { status: number } | null, image: ImageData) => {\n          if (error) {\n            reject(error);\n            return;\n          }\n          this.addImage(imageId, image, options);\n          resolve();\n        });\n      });\n    });\n  }\n\n  addImage(imageId: string, data: MapImageData, options?: MapImageOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.addImage(imageId, <any>data, options);\n    });\n  }\n\n  removeImage(imageId: string) {\n    this.imageIdsToRemove.push(imageId);\n  }\n\n  addSource(sourceId: string, source: AllSource) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(source)\n        .forEach((key) =>\n          (<any>source)[key] === undefined && delete (<any>source)[key]);\n      this.mapInstance.addSource(sourceId, <any>source); // Typings issue\n    });\n  }\n\n  getSource<T>(sourceId: string) {\n    return <T><any>this.mapInstance.getSource(sourceId);\n  }\n\n  removeSource(sourceId: string) {\n    this.sourceIdsToRemove.push(sourceId);\n  }\n\n  setAllLayerPaintProperty(\n    layerId: string,\n    paint: MapboxGl.BackgroundPaint |\n      MapboxGl.FillPaint |\n      MapboxGl.FillExtrusionPaint |\n      MapboxGl.LinePaint |\n      MapboxGl.SymbolPaint |\n      MapboxGl.RasterPaint |\n      MapboxGl.CirclePaint\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(paint).forEach((key) => {\n        // TODO Check for perf, setPaintProperty only on changed paint props maybe\n        this.mapInstance.setPaintProperty(layerId, key, (<any>paint)[key]);\n      });\n    });\n  }\n\n  setAllLayerLayoutProperty(\n    layerId: string,\n    layout: MapboxGl.BackgroundLayout |\n      MapboxGl.FillLayout |\n      MapboxGl.FillExtrusionLayout |\n      MapboxGl.LineLayout |\n      MapboxGl.SymbolLayout |\n      MapboxGl.RasterLayout |\n      MapboxGl.CircleLayout\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(layout).forEach((key) => {\n        // TODO Check for perf, setPaintProperty only on changed paint props maybe\n        this.mapInstance.setLayoutProperty(layerId, key, (<any>layout)[key]);\n      });\n    });\n  }\n\n  setLayerFilter(layerId: string, filter: any[]) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setFilter(layerId, filter);\n    });\n  }\n\n  setLayerBefore(layerId: string, beforeId: string) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.moveLayer(layerId, beforeId);\n    });\n  }\n\n  setLayerZoomRange(layerId: string, minZoom?: number, maxZoom?: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setLayerZoomRange(layerId, minZoom ? minZoom : 0, maxZoom ? maxZoom : 20);\n    });\n  }\n\n  fitBounds(bounds: MapboxGl.LngLatBoundsLike, options?: any) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.fitBounds(bounds, options);\n    });\n  }\n\n  getCurrentViewportBbox(): BBox {\n    const canvas = this.mapInstance.getCanvas();\n    const w = parseInt(canvas.style.width!, 10);\n    const h = parseInt(canvas.style.height!, 10);\n    const upLeft = this.mapInstance.unproject([0, 0]).toArray();\n    const upRight = this.mapInstance.unproject([w, 0]).toArray();\n    const downRight = this.mapInstance.unproject([w, h]).toArray();\n    const downLeft = this.mapInstance.unproject([0, h]).toArray();\n    return <any>bbox(polygon([[upLeft, upRight, downRight, downLeft, upLeft]]));\n  }\n\n  applyChanges() {\n    this.zone.runOutsideAngular(() => {\n      this.removeLayers();\n      this.removeSources();\n      this.removeMarkers();\n      this.removePopups();\n      this.removeImages();\n    });\n  }\n\n  private createMap(options: MapboxGl.MapboxOptions) {\n    NgZone.assertNotInAngularZone();\n    Object.keys(options)\n      .forEach((key: string) => {\n        const tkey = <keyof MapboxGl.MapboxOptions>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n    this.mapInstance = new MapboxGl.Map(options);\n    const subChanges = this.zone.onMicrotaskEmpty\n      .subscribe(() => this.applyChanges());\n    if (this.MglResizeEventEmitter) {\n      const subResize = this.MglResizeEventEmitter.resizeEvent.subscribe(() => {\n        this.mapInstance.resize();\n      });\n      this.subscription.add(subResize);\n    }\n    this.subscription.add(subChanges);\n  }\n\n  private removeLayers() {\n    for (const layerId of this.layerIdsToRemove) {\n      this.mapInstance.off('click', layerId);\n      this.mapInstance.off('mouseenter', layerId);\n      this.mapInstance.off('mouseleave', layerId);\n      this.mapInstance.off('mousemove', layerId);\n      this.mapInstance.removeLayer(layerId);\n    }\n    this.layerIdsToRemove = [];\n  }\n\n  private removeSources() {\n    for (const sourceId of this.sourceIdsToRemove) {\n      this.mapInstance.removeSource(sourceId);\n    }\n    this.sourceIdsToRemove = [];\n  }\n\n  private removeMarkers() {\n    for (const marker of this.markersToRemove) {\n      marker.remove();\n    }\n    this.markersToRemove = [];\n  }\n\n  private removePopups() {\n    for (const popup of this.popupsToRemove) {\n      popup.remove();\n    }\n    this.popupsToRemove = [];\n  }\n\n  private removeImages() {\n    for (const imageId of this.imageIdsToRemove) {\n      this.mapInstance.removeImage(imageId);\n    }\n    this.imageIdsToRemove = [];\n  }\n\n  private hookEvents(events: MapEvent) {\n    this.mapInstance.on('load', () => {\n      this.mapLoaded.next(undefined);\n      this.mapLoaded.complete();\n      this.zone.run(() => events.load.emit(this.mapInstance));\n    });\n    if (events.resize.observers.length) {\n      this.mapInstance.on('resize', () => this.zone.run(() => events.resize.emit()));\n    }\n    if (events.remove.observers.length) {\n      this.mapInstance.on('remove', () => this.zone.run(() => events.remove.emit()));\n    }\n    if (events.mouseDown.observers.length) {\n      this.mapInstance.on('mousedown', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseDown.emit(evt)));\n    }\n    if (events.mouseUp.observers.length) {\n      this.mapInstance.on('mouseup', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseUp.emit(evt)));\n    }\n    if (events.mouseMove.observers.length) {\n      this.mapInstance.on('mousemove', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseMove.emit(evt)));\n    }\n    if (events.click.observers.length) {\n      this.mapInstance.on('click', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.click.emit(evt)));\n    }\n    if (events.dblClick.observers.length) {\n      this.mapInstance.on('dblclick', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.dblClick.emit(evt)));\n    }\n    if (events.mouseEnter.observers.length) {\n      this.mapInstance.on('mouseenter', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseEnter.emit(evt)));\n    }\n    if (events.mouseLeave.observers.length) {\n      this.mapInstance.on('mouseleave', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseLeave.emit(evt)));\n    }\n    if (events.mouseOver.observers.length) {\n      this.mapInstance.on('mouseover', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseOver.emit(evt)));\n    }\n    if (events.mouseOut.observers.length) {\n      this.mapInstance.on('mouseout', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseOut.emit(evt)));\n    }\n    if (events.contextMenu.observers.length) {\n      this.mapInstance.on('contextmenu', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.contextMenu.emit(evt)));\n    }\n    if (events.touchStart.observers.length) {\n      this.mapInstance.on('touchstart', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchStart.emit(evt)));\n    }\n    if (events.touchEnd.observers.length) {\n      this.mapInstance.on('touchend', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchEnd.emit(evt)));\n    }\n    if (events.touchMove.observers.length) {\n      this.mapInstance.on('touchmove', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchMove.emit(evt)));\n    }\n    if (events.touchCancel.observers.length) {\n      this.mapInstance.on('touchcancel', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchCancel.emit(evt)));\n    }\n    if (events.wheel.observers.length) {\n      // MapboxGl.MapWheelEvent\n      this.mapInstance.on('wheel', (evt: any) => this.zone.run(() => events.wheel.emit(evt)));\n    }\n    if (events.moveStart.observers.length) {\n      this.mapInstance.on('movestart', (evt: DragEvent) => this.zone.run(() => events.moveStart.emit(evt)));\n    }\n    if (events.move.observers.length) {\n      this.mapInstance.on('move', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.move.emit(evt)));\n    }\n    if (events.moveEnd.observers.length) {\n      this.mapInstance.on('moveend', (evt: DragEvent) => this.zone.run(() => events.moveEnd.emit(evt)));\n    }\n    if (events.dragStart.observers.length) {\n      this.mapInstance.on('dragstart', (evt: DragEvent) => this.zone.run(() => events.dragStart.emit(evt)));\n    }\n    if (events.drag.observers.length) {\n      this.mapInstance.on('drag', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.drag.emit(evt)));\n    }\n    if (events.dragEnd.observers.length) {\n      this.mapInstance.on('dragend', (evt: DragEvent) => this.zone.run(() => events.dragEnd.emit(evt)));\n    }\n    if (events.zoomStart.observers.length) {\n      this.mapInstance.on('zoomstart', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.zoomStart.emit(evt)));\n    }\n    if (events.zoomEvt.observers.length) {\n      this.mapInstance.on('zoom', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.zoomEvt.emit(evt)));\n    }\n    if (events.zoomEnd.observers.length) {\n      this.mapInstance.on('zoomend', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.zoomEnd.emit(evt)));\n    }\n    if (events.rotateStart.observers.length) {\n      this.mapInstance.on('rotatestart', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.rotateStart.emit(evt)));\n    }\n    if (events.rotate.observers.length) {\n      this.mapInstance.on('rotate', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.rotate.emit(evt)));\n    }\n    if (events.rotateEnd.observers.length) {\n      this.mapInstance.on('rotateend', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.rotateEnd.emit(evt)));\n    }\n    if (events.pitchStart.observers.length) {\n      this.mapInstance.on('pitchstart', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchStart.emit(evt)));\n    }\n    if (events.pitchEvt.observers.length) {\n      this.mapInstance.on('pitch', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchEvt.emit(evt)));\n    }\n    if (events.pitchEnd.observers.length) {\n      this.mapInstance.on('pitchend', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchEnd.emit(evt)));\n    }\n    if (events.boxZoomStart.observers.length) {\n      this.mapInstance.on('boxzoomstart', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomStart.emit(evt)));\n    }\n    if (events.boxZoomEnd.observers.length) {\n      this.mapInstance.on('boxzoomend', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomEnd.emit(evt)));\n    }\n    if (events.boxZoomCancel.observers.length) {\n      this.mapInstance.on('boxzoomcancel', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomCancel.emit(evt)));\n    }\n    if (events.webGlContextLost.observers.length) {\n      this.mapInstance.on('webglcontextlost', () => this.zone.run(() => events.webGlContextLost.emit()));\n    }\n    if (events.webGlContextRestored.observers.length) {\n      this.mapInstance.on('webglcontextrestored', () => this.zone.run(() => events.webGlContextRestored.emit()));\n    }\n    if (events.render.observers.length) {\n      this.mapInstance.on('render', () => this.zone.run(() => events.render.emit()));\n    }\n    if (events.error.observers.length) {\n      this.mapInstance.on('error', () => this.zone.run(() => events.error.emit()));\n    }\n    if (events.data.observers.length) {\n      this.mapInstance.on('data', (evt: MapboxGl.EventData) => this.zone.run(() => events.data.emit(evt)));\n    }\n    if (events.styleData.observers.length) {\n      this.mapInstance.on('styledata', (evt: MapboxGl.EventData) => this.zone.run(() => events.styleData.emit(evt)));\n    }\n    if (events.sourceData.observers.length) {\n      this.mapInstance.on('sourcedata', (evt: MapboxGl.EventData) => this.zone.run(() => events.sourceData.emit(evt)));\n    }\n    if (events.dataLoading.observers.length) {\n      this.mapInstance.on('dataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.dataLoading.emit(evt)));\n    }\n    if (events.styleDataLoading.observers.length) {\n      this.mapInstance.on('styledataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.styleDataLoading.emit(evt)));\n    }\n    if (events.sourceDataLoading.observers.length) {\n      this.mapInstance.on('sourcedataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.sourceDataLoading.emit(evt)));\n    }\n  }\n\n  // TODO move this elsewhere\n  private assign(obj: any, prop: any, value: any) {\n    if (typeof prop === 'string') {\n      // tslint:disable-next-line:no-parameter-reassignment\n      prop = prop.split('.');\n    }\n    if (prop.length > 1) {\n      const e = prop.shift();\n      this.assign(obj[e] =\n        Object.prototype.toString.call(obj[e]) === '[object Object]'\n          ? obj[e]\n          : {},\n        prop,\n        value);\n    } else {\n      obj[prop[0]] = value;\n    }\n  }\n}\n","import { Control, IControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\n\nexport class CustomControl implements IControl {\n  constructor(\n    private container: HTMLElement\n  ) {\n  }\n\n  onAdd() {\n    return this.container;\n  }\n\n  onRemove() {\n    return this.container.parentNode!.removeChild(this.container);\n  }\n\n  getDefaultPosition() {\n    return 'top-right';\n  }\n}\n\n@Component({\n  selector: 'mgl-control',\n  template: '<div class=\"mapboxgl-ctrl\" #content><ng-content></ng-content></div>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ControlComponent implements OnDestroy, AfterContentInit {\n  /* Init inputs */\n  @Input() position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\n  @ViewChild('content') content: ElementRef;\n\n  control: Control | IControl;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngAfterContentInit() {\n    if (this.content.nativeElement.childNodes.length) {\n      this.control = new CustomControl(this.content.nativeElement);\n      this.MapService.mapCreated$.subscribe(() => {\n        this.MapService.addControl(this.control!, this.position);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.MapService.removeControl(this.control);\n  }\n}\n","import { Directive, Host, Input, OnInit } from '@angular/core';\nimport { AttributionControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglAttribution]'\n})\nexport class AttributionControlDirective implements OnInit {\n  /* Init inputs */\n  @Input() compact?: boolean;\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { compact?: boolean } = {};\n      if (this.compact !== undefined) {\n        options.compact = this.compact;\n      }\n      this.ControlComponent.control = new AttributionControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { Directive, OnInit, Host } from '@angular/core';\nimport { FullscreenControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglFullscreen]'\n})\nexport class FullscreenControlDirective implements OnInit {\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      this.ControlComponent.control = new FullscreenControl();\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Host,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnChanges,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges\n  } from '@angular/core';\nimport { MapService } from '../map/map.service';\nimport { GeocoderEvent } from '../map/map.types';\nimport { ControlComponent } from './control.component';\n\nconst MapboxGeocoder = require('@mapbox/mapbox-gl-geocoder');\n\nexport const MAPBOX_GEOCODER_API_KEY = new InjectionToken('MapboxApiKey');\n\nexport interface LngLatLiteral {\n  latitude: number;\n  longitude: number;\n}\n\nexport interface Results extends GeoJSON.FeatureCollection<GeoJSON.Point> {\n  attribution: string;\n  query: string[];\n}\n\nexport interface Result extends GeoJSON.Feature<GeoJSON.Point> {\n  bbox: [number, number, number, number];\n  center: number[];\n  place_name: string;\n  place_type: string[];\n  relevance: number;\n  text: string;\n  address: string;\n  context: any[];\n}\n\n@Directive({\n  selector: '[mglGeocoder]'\n})\nexport class GeocoderControlDirective implements OnInit, OnChanges, GeocoderEvent {\n  /* Init inputs */\n  @Input() country?: string;\n  @Input() placeholder?: string;\n  @Input() zoom?: number;\n  @Input() bbox?: [number, number, number, number];\n  @Input() types?: string;\n  @Input() flyTo?: boolean;\n  @Input() minLength?: number;\n  @Input() limit?: number;\n  @Input() language?: string;\n  @Input() accessToken?: string;\n  @Input() filter?: (feature: Result) => boolean;\n  @Input() localGeocoder?: (query: string) => Result[];\n\n  /* Dynamic inputs */\n  @Input() proximity?: LngLatLiteral;\n  @Input() searchInput?: string;\n\n  @Output() clear = new EventEmitter<void>();\n  @Output() loading = new EventEmitter<{ query: string }>();\n  @Output() results = new EventEmitter<Results>();\n  @Output() result = new EventEmitter<{ result: Result }>();\n  @Output() error = new EventEmitter<any>();\n\n  geocoder: any;\n\n  constructor(\n    private MapService: MapService,\n    private zone: NgZone,\n    @Host() private ControlComponent: ControlComponent,\n    @Optional() @Inject(MAPBOX_GEOCODER_API_KEY) private readonly MAPBOX_GEOCODER_API_KEY: string\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options = {\n        proximity: this.proximity,\n        country: this.country,\n        placeholder: this.placeholder,\n        zoom: this.zoom,\n        bbox: this.bbox,\n        types: this.types,\n        flyTo: this.flyTo,\n        minLength: this.minLength,\n        limit: this.limit,\n        language: this.language,\n        filter: this.filter,\n        localGeocoder: this.localGeocoder,\n        accessToken: this.accessToken || this.MAPBOX_GEOCODER_API_KEY\n      };\n\n      Object.keys(options).forEach((key: string) => {\n        const tkey = <keyof typeof options>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n      this.geocoder = new MapboxGeocoder(options);\n      this.hookEvents(this);\n      this.addControl();\n    });\n    if (this.searchInput) {\n      this.MapService.mapLoaded$.subscribe(() => {\n        this.geocoder.query(this.searchInput);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.geocoder) {\n      return;\n    }\n    if (changes.proximity && !changes.proximity.isFirstChange()) {\n      this.geocoder.setProximity(changes.proximity.currentValue);\n    }\n    if (changes.searchInput) {\n      this.geocoder.query(this.searchInput);\n    }\n  }\n\n  private addControl() {\n    this.ControlComponent.control = this.geocoder;\n    this.MapService.addControl(\n      this.ControlComponent.control,\n      this.ControlComponent.position\n    );\n  }\n\n  private hookEvents(events: GeocoderEvent) {\n    if (events.results.observers.length) {\n      this.geocoder.on('results', (evt: Results) => this.zone.run(() => events.results.emit(evt)));\n    }\n    if (events.result.observers.length) {\n      this.geocoder.on('result', (evt: { result: Result }) => this.zone.run(() => events.result.emit(evt)));\n    }\n    if (events.error.observers.length) {\n      this.geocoder.on('error', (evt: any) => this.zone.run(() => events.error.emit(evt)));\n    }\n    if (events.loading.observers.length) {\n      this.geocoder.on('loading', (evt: { query: string }) => this.zone.run(() => events.loading.emit(evt)));\n    }\n    if (events.clear.observers.length) {\n      this.geocoder.on('clear', () => this.zone.run(() => events.clear.emit()));\n    }\n\n  }\n}\n","import { Directive, Host, Input, OnInit } from '@angular/core';\nimport { GeolocateControl, FitBoundsOptions } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglGeolocate]'\n})\nexport class GeolocateControlDirective implements OnInit {\n  /* Init inputs */\n  @Input() positionOptions?: PositionOptions;\n  @Input() fitBoundsOptions?: FitBoundsOptions;\n  @Input() trackUserLocation?: boolean;\n  @Input() showUserLocation?: boolean;\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options = {\n        positionOptions: this.positionOptions,\n        fitBoundsOptions: this.fitBoundsOptions,\n        trackUserLocation: this.trackUserLocation,\n        showUserLocation: this.showUserLocation\n      };\n\n      Object.keys(options)\n        .forEach((key: string) => {\n          const tkey = <keyof typeof options>key;\n          if (options[tkey] === undefined) {\n            delete options[tkey];\n          }\n        });\n      this.ControlComponent.control = new GeolocateControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { Directive, Host, Input, OnInit } from '@angular/core';\nimport { NavigationControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglNavigation]'\n})\nexport class NavigationControlDirective implements OnInit {\n  /* Init inputs */\n  @Input() showCompass?: boolean;\n  @Input() showZoom?: boolean;\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      let options: { showCompass?: boolean, showZoom?: boolean } = {};\n      if (this.showCompass !== undefined) {\n        options.showCompass = this.showCompass;\n      }\n      if (this.showZoom !== undefined) {\n        options.showZoom = this.showZoom;\n      }\n      this.ControlComponent.control = new NavigationControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { Directive, Host, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { ScaleControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglScale]'\n})\nexport class ScaleControlDirective implements OnInit, OnChanges {\n  /* Init inputs */\n  @Input() maxWidth?: number;\n\n  /* Dynamic inputs */\n  @Input() unit?: 'imperial' | 'metric' | 'nautical';\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.unit && !changes.unit.isFirstChange()) {\n      (<any>this.ControlComponent.control).setUnit(changes.unit.currentValue);\n    }\n  }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { maxWidth?: number, unit?: string } = {};\n      if (this.maxWidth !== undefined) {\n        options.maxWidth = this.maxWidth;\n      }\n      if (this.unit !== undefined) {\n        options.unit = this.unit;\n      }\n      this.ControlComponent.control = new ScaleControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n  EventEmitter\n} from '@angular/core';\nimport { LngLatLike, Marker, PointLike, Anchor } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-marker',\n  template: '<div #content><ng-content></ng-content></div>',\n  styles: [`\n    .mapboxgl-marker {\n      line-height: 0;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MarkerComponent implements OnChanges, OnDestroy, AfterViewInit, OnInit {\n  /* Init input */\n  @Input() offset?: PointLike;\n  @Input() anchor?: Anchor;\n\n  /* Dynamic input */\n  @Input() feature?: GeoJSON.Feature<GeoJSON.Point>;\n  @Input() lngLat?: LngLatLike;\n  @Input() draggable?: boolean;\n\n  @Output() dragStart = new EventEmitter<Marker>();\n  @Output() drag = new EventEmitter<Marker>();\n  @Output() dragEnd = new EventEmitter<Marker>();\n\n  @ViewChild('content') content: ElementRef;\n\n  markerInstance?: Marker;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    if (this.feature && this.lngLat) {\n      throw new Error('feature and lngLat input are mutually exclusive');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.lngLat && !changes.lngLat.isFirstChange()) {\n      this.markerInstance!.setLngLat(this.lngLat!);\n    }\n    if (changes.feature && !changes.feature.isFirstChange()) {\n      this.markerInstance!.setLngLat(this.feature!.geometry!.coordinates);\n    }\n    if (changes.draggable && !changes.draggable.isFirstChange()) {\n      this.markerInstance!.setDraggable(!!this.draggable);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      this.markerInstance = this.MapService.addMarker({\n        markersOptions: {\n          offset: this.offset,\n          anchor: this.anchor,\n          draggable: !!this.draggable,\n          element: this.content.nativeElement,\n          feature: this.feature,\n          lngLat: this.lngLat\n        },\n        markersEvents: {\n          dragStart: this.dragStart,\n          drag: this.drag,\n          dragEnd: this.dragEnd\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.MapService.removeMarker(this.markerInstance!);\n    this.markerInstance = undefined;\n  }\n\n  togglePopup() {\n    this.markerInstance!.togglePopup();\n  }\n\n  updateCoordinates(coordinates: number[]) {\n    this.markerInstance!.setLngLat(coordinates);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { GeoJSONSource, GeoJSONSourceOptions } from 'mapbox-gl';\nimport { fromEvent, Subject, Subscription } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { MapService } from '../../map/map.service';\n\n@Component({\n  selector: 'mgl-geojson-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GeoJSONSourceComponent implements OnInit, OnDestroy, OnChanges, GeoJSONSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() data?: GeoJSON.Feature<GeoJSON.Geometry> | GeoJSON.FeatureCollection<GeoJSON.Geometry> | string;\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n  @Input() buffer?: number;\n  @Input() tolerance?: number;\n  @Input() cluster?: boolean;\n  @Input() clusterRadius?: number;\n  @Input() clusterMaxZoom?: number;\n\n  updateFeatureData = new Subject();\n\n  private sub = new Subscription();\n  private sourceAdded = false;\n  private featureIdCounter = 0;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    if (!this.data) {\n      this.data = {\n        type: 'FeatureCollection',\n        features: []\n      };\n    }\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.maxzoom && !changes.maxzoom.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.buffer && !changes.buffer.isFirstChange() ||\n      changes.tolerance && !changes.tolerance.isFirstChange() ||\n      changes.cluster && !changes.cluster.isFirstChange() ||\n      changes.clusterRadius && !changes.clusterRadius.isFirstChange() ||\n      changes.clusterMaxZoom && !changes.clusterMaxZoom.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n    if (changes.data && !changes.data.isFirstChange()) {\n      const source = this.MapService.getSource<GeoJSONSource>(this.id);\n      source.setData(this.data!);\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  addFeature(feature: GeoJSON.Feature<GeoJSON.GeometryObject>) {\n    const collection = <GeoJSON.FeatureCollection<GeoJSON.GeometryObject>>this.data;\n    collection.features.push(feature);\n    this.updateFeatureData.next();\n  }\n\n  removeFeature(feature: GeoJSON.Feature<GeoJSON.GeometryObject>) {\n    const collection = <GeoJSON.FeatureCollection<GeoJSON.GeometryObject>>this.data;\n    const index = collection.features.indexOf(feature);\n    if (index > -1) {\n      collection.features.splice(index, 1);\n    }\n    this.updateFeatureData.next();\n  }\n\n  getNewFeatureId() {\n    return ++this.featureIdCounter;\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, {\n      type: 'geojson',\n      data: this.data,\n      maxzoom: this.maxzoom,\n      minzoom: this.minzoom,\n      buffer: this.buffer,\n      tolerance: this.tolerance,\n      cluster: this.cluster,\n      clusterRadius: this.clusterRadius,\n      clusterMaxZoom: this.clusterMaxZoom,\n    });\n    const sub = this.updateFeatureData.pipe(debounceTime(0)).subscribe(() => {\n      const source = this.MapService.getSource<GeoJSONSource>(this.id);\n      source.setData(this.data!);\n    });\n    this.sub.add(sub);\n    this.sourceAdded = true;\n  }\n}\n","import { Component, forwardRef, Inject, Input, OnDestroy, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { GeoJSONSourceComponent } from './geojson-source.component';\n\n@Component({\n  selector: 'mgl-feature',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FeatureComponent implements OnInit, OnDestroy, GeoJSON.Feature<GeoJSON.GeometryObject> {\n  /* Init inputs */\n  @Input() id?: number; // FIXME number only for now https://github.com/mapbox/mapbox-gl-js/issues/2716\n  @Input() geometry: GeoJSON.GeometryObject;\n  @Input() properties: any;\n  type: 'Feature' = 'Feature';\n\n  private feature: GeoJSON.Feature<GeoJSON.GeometryObject>;\n\n  constructor(\n    @Inject(forwardRef(() => GeoJSONSourceComponent)) private GeoJSONSourceComponent: GeoJSONSourceComponent\n  ) { }\n\n  ngOnInit() {\n    if (!this.id) {\n      this.id = this.GeoJSONSourceComponent.getNewFeatureId();\n    }\n    this.feature = {\n      type: this.type,\n      geometry: this.geometry,\n      properties: this.properties ? this.properties : {}\n    };\n    this.feature.id = this.id;\n    this.GeoJSONSourceComponent.addFeature(this.feature);\n  }\n\n  ngOnDestroy() {\n    this.GeoJSONSourceComponent.removeFeature(this.feature);\n  }\n\n  updateCoordinates(coordinates: number[]) {\n    (<GeoJSON.Point>this.feature.geometry).coordinates = coordinates;\n    this.GeoJSONSourceComponent.updateFeatureData.next();\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output\n} from '@angular/core';\nimport { MapMouseEvent } from 'mapbox-gl';\nimport { fromEvent, Observable, ReplaySubject } from 'rxjs';\nimport { filter, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { LayerComponent } from '../layer/layer.component';\nimport { MapService } from '../map/map.service';\nimport { MarkerComponent } from '../marker/marker.component';\nimport { FeatureComponent } from '../source/geojson/feature.component';\n\n@Directive({\n  selector: '[mglDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnDestroy {\n  // tslint:disable-next-line:no-input-rename\n  @Input('mglDraggable') layer?: LayerComponent;\n\n  @Output() dragStart = new EventEmitter<MapMouseEvent>();\n  @Output() dragEnd = new EventEmitter<MapMouseEvent>();\n  @Output() drag = new EventEmitter<MapMouseEvent>();\n\n  private destroyed$: ReplaySubject<void> = new ReplaySubject(1);\n\n  constructor(\n    private MapService: MapService,\n    private NgZone: NgZone,\n    @Optional() @Host() private FeatureComponent?: FeatureComponent,\n    @Optional() @Host() private MarkerComponent?: MarkerComponent\n  ) { }\n\n  ngOnInit() {\n    let enter$;\n    let leave$;\n    let updateCoords;\n    if (this.MarkerComponent) {\n      console.warn('mglDraggable on Marker is deprecated, use draggable input instead');\n      let markerElement = (<Element>this.MarkerComponent.content.nativeElement);\n      if (markerElement.children.length === 1) {\n        markerElement = markerElement.children[0];\n      }\n      enter$ = fromEvent(markerElement, 'mouseenter');\n      leave$ = fromEvent(markerElement, 'mouseleave');\n      updateCoords = this.MarkerComponent.updateCoordinates.bind(this.MarkerComponent);\n    } else if (this.FeatureComponent && this.layer) {\n      enter$ = this.layer.mouseEnter;\n      leave$ = this.layer.mouseLeave;\n      updateCoords = this.FeatureComponent.updateCoordinates.bind(this.FeatureComponent);\n      if (this.FeatureComponent.geometry.type !== 'Point') {\n        throw new Error('mglDraggable only support point feature');\n      }\n    } else {\n      throw new Error('mglDraggable can only be used on Feature (with a layer as input) or Marker');\n    }\n\n    this.handleDraggable(enter$, leave$, updateCoords);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(undefined);\n    this.destroyed$.complete();\n  }\n\n  private handleDraggable(enter$: Observable<any>, leave$: Observable<any>, updateCoords: (coord: number[]) => void) {\n    let moving = false;\n    let inside = false;\n    this.MapService.mapCreated$.subscribe(() => {\n      const mouseUp$ = fromEvent<MapMouseEvent>(this.MapService.mapInstance, 'mouseup');\n      const dragStart$ = enter$.pipe(\n        takeUntil(this.destroyed$),\n        filter(() => !moving),\n        filter((evt) => this.filterFeature(evt)),\n        tap(() => {\n          inside = true;\n          this.MapService.changeCanvasCursor('move');\n          this.MapService.updateDragPan(false);\n        }),\n        switchMap(() =>\n          fromEvent<MapMouseEvent>(this.MapService.mapInstance, 'mousedown')\n            .pipe(takeUntil(leave$))\n        )\n      );\n      const dragging$ = dragStart$.pipe(\n        switchMap(() => fromEvent<MapMouseEvent>(this.MapService.mapInstance, 'mousemove')\n          .pipe(takeUntil(mouseUp$))\n        )\n      );\n      const dragEnd$ = dragStart$.pipe(\n        switchMap(() => mouseUp$.pipe(take(1)))\n      );\n      dragStart$.subscribe((evt) => {\n        moving = true;\n        if (this.dragStart.observers.length) {\n          this.NgZone.run(() => this.dragStart.emit(evt));\n        }\n      });\n      dragging$.subscribe((evt) => {\n        updateCoords([evt.lngLat.lng, evt.lngLat.lat]);\n        if (this.drag.observers.length) {\n          this.NgZone.run(() => this.drag.emit(evt));\n        }\n      });\n      dragEnd$.subscribe((evt) => {\n        moving = false;\n        if (this.dragEnd.observers.length) {\n          this.NgZone.run(() => this.dragEnd.emit(evt));\n        }\n        if (!inside) { // It's possible to dragEnd outside the target (small input lag)\n          this.MapService.changeCanvasCursor('');\n          this.MapService.updateDragPan(true);\n        }\n      });\n      leave$.pipe(\n        takeUntil(this.destroyed$),\n        tap(() => inside = false),\n        filter(() => !moving)\n      ).subscribe(() => {\n        this.MapService.changeCanvasCursor('');\n        this.MapService.updateDragPan(true);\n      });\n    });\n  }\n\n  private filterFeature(evt: MapMouseEvent) {\n    if (this.FeatureComponent && this.layer) {\n      const feature: GeoJSON.Feature<any> = this.MapService.queryRenderedFeatures(\n        evt.point,\n        {\n          layers: [this.layer.id],\n          filter: [\n            'all',\n            ['==', '$type', 'Point'],\n            ['==', '$id', this.FeatureComponent.id]\n          ]\n        }\n      )[0];\n      if (!feature) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { MapService } from '../map/map.service';\nimport { MapImageData, MapImageOptions } from '../map/map.types';\n\n@Component({\n  selector: 'mgl-image',\n  template: ''\n})\nexport class ImageComponent implements OnInit, OnDestroy, OnChanges {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() data?: MapImageData;\n  @Input() options?: MapImageOptions;\n  @Input() url?: string;\n\n  @Output() error = new EventEmitter<{ status: number }>();\n  @Output() loaded = new EventEmitter<void>();\n\n  private imageAdded = false;\n\n  constructor(\n    private MapService: MapService,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(async () => {\n      if (this.data) {\n        this.MapService.addImage(\n          this.id,\n          this.data,\n          this.options\n        );\n        this.imageAdded = true;\n      } else if (this.url) {\n        try {\n          await this.MapService.loadAndAddImage(\n            this.id,\n            this.url,\n            this.options\n          );\n          this.imageAdded = true;\n          this.zone.run(() => {\n            this.loaded.emit();\n          });\n        } catch (error) {\n          this.zone.run(() => {\n            this.error.emit(error);\n          });\n        }\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.data && !changes.data.isFirstChange() ||\n      changes.options && !changes.options.isFirstChange() ||\n      changes.url && !changes.url.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.imageAdded) {\n      this.MapService.removeImage(this.id);\n    }\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  BackgroundLayout,\n  BackgroundPaint,\n  CircleLayout,\n  CirclePaint,\n  FillExtrusionLayout,\n  FillExtrusionPaint,\n  FillLayout,\n  FillPaint,\n  GeoJSONSource,\n  GeoJSONSourceRaw,\n  ImageSource,\n  Layer,\n  LineLayout,\n  LinePaint,\n  MapMouseEvent,\n  RasterLayout,\n  RasterPaint,\n  RasterSource,\n  SymbolLayout,\n  SymbolPaint,\n  VectorSource,\n  VideoSource\n} from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-layer',\n  template: ''\n})\nexport class LayerComponent implements OnInit, OnDestroy, OnChanges, Layer {\n  /* Init inputs */\n  @Input() id: string;\n  @Input() source?: string | VectorSource | RasterSource | GeoJSONSource | ImageSource | VideoSource | GeoJSONSourceRaw;\n  @Input() type: 'symbol' | 'fill' | 'line' | 'circle' | 'fill-extrusion' | 'raster' | 'background';\n  @Input() metadata?: any;\n  @Input() sourceLayer?: string;\n\n  /* Dynamic inputs */\n  @Input() filter?: any[];\n  @Input() layout?: BackgroundLayout | FillLayout | FillExtrusionLayout | LineLayout | SymbolLayout | RasterLayout | CircleLayout;\n  @Input() paint?: BackgroundPaint | FillPaint | FillExtrusionPaint | LinePaint | SymbolPaint | RasterPaint | CirclePaint;\n  @Input() before?: string;\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n\n  @Output() click = new EventEmitter<MapMouseEvent>();\n  @Output() mouseEnter = new EventEmitter<MapMouseEvent>();\n  @Output() mouseLeave = new EventEmitter<MapMouseEvent>();\n  @Output() mouseMove = new EventEmitter<MapMouseEvent>();\n\n  private layerAdded = false;\n  private sub: Subscription;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init(true);\n      this.sub = fromEvent(this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getLayer(this.id))\n      ).subscribe(() => {\n        this.init(false);\n      });\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.layerAdded) {\n      return;\n    }\n    if (changes.paint && !changes.paint.isFirstChange()) {\n      this.MapService.setAllLayerPaintProperty(this.id, changes.paint.currentValue!);\n    }\n    if (changes.layout && !changes.layout.isFirstChange()) {\n      this.MapService.setAllLayerLayoutProperty(this.id, changes.layout.currentValue!);\n    }\n    if (changes.filter && !changes.filter.isFirstChange()) {\n      this.MapService.setLayerFilter(this.id, changes.filter.currentValue!);\n    }\n    if (changes.before && !changes.before.isFirstChange()) {\n      this.MapService.setLayerBefore(this.id, changes.before.currentValue!);\n    }\n    if (\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange()\n    ) {\n      this.MapService.setLayerZoomRange(this.id, this.minzoom, this.maxzoom);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.layerAdded) {\n      this.MapService.removeLayer(this.id);\n    }\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  private init(bindEvents: boolean) {\n    const layer = {\n      layerOptions: {\n        id: this.id,\n        type: this.type,\n        source: this.source,\n        metadata: this.metadata,\n        'source-layer': this.sourceLayer,\n        minzoom: this.minzoom,\n        maxzoom: this.maxzoom,\n        filter: this.filter,\n        layout: this.layout,\n        paint: this.paint\n      },\n      layerEvents: {\n        click: this.click,\n        mouseEnter: this.mouseEnter,\n        mouseLeave: this.mouseLeave,\n        mouseMove: this.mouseMove\n      }\n    };\n    this.MapService.addLayer(layer, bindEvents, this.before);\n    this.layerAdded = true;\n  }\n}\n","import {\n  AnimationOptions,\n  EventData,\n  LngLatBoundsLike,\n  LngLatLike,\n  Map,\n  MapBoxZoomEvent,\n  MapMouseEvent,\n  MapTouchEvent,\n  PaddingOptions,\n  PointLike,\n  Style\n  } from 'mapbox-gl';\nimport { MapService, MovingOptions } from './map.service';\nimport { MapEvent } from './map.types';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\n\ndeclare global {\n  namespace mapboxgl {\n    export interface MapboxOptions {\n      failIfMajorPerformanceCaveat?: boolean;\n      transformRequest?: Function;\n      localIdeographFontFamily?: string;\n      pitchWithRotate?: boolean;\n    }\n  }\n}\n\n@Component({\n  selector: 'mgl-map',\n  template: '<div #container></div>',\n  styles: [`\n  :host {\n    display: block;\n  }\n  div {\n    height: 100%;\n    width: 100%;\n  }\n  `],\n  providers: [\n    MapService\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapComponent implements OnChanges, OnDestroy, AfterViewInit, MapEvent {\n  /* Init inputs */\n  @Input() accessToken?: string;\n  @Input() customMapboxApiUrl?: string;\n  @Input() hash?: boolean;\n  @Input() refreshExpiredTiles?: boolean;\n  @Input() failIfMajorPerformanceCaveat?: boolean;\n  @Input() classes?: string[];\n  @Input() bearingSnap?: number;\n  @Input() interactive?: boolean;\n  @Input() pitchWithRotate?: boolean;\n  @Input() attributionControl?: boolean;\n  @Input() logoPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  @Input() maxTileCacheSize?: number;\n  @Input() localIdeographFontFamily?: string;\n  @Input() preserveDrawingBuffer?: boolean;\n  @Input() renderWorldCopies?: boolean;\n  @Input() trackResize?: boolean;\n  @Input() transformRequest?: Function;\n\n  /* Dynamic inputs */\n  @Input() minZoom?: number;\n  @Input() maxZoom?: number;\n  @Input() scrollZoom?: boolean;\n  @Input() dragRotate?: boolean;\n  @Input() touchZoomRotate?: boolean;\n  @Input() doubleClickZoom?: boolean;\n  @Input() keyboard?: boolean;\n  @Input() dragPan?: boolean;\n  @Input() boxZoom?: boolean;\n  @Input() style: Style | string;\n  @Input() center?: LngLatLike;\n  @Input() maxBounds?: LngLatBoundsLike;\n  @Input() zoom?: [number];\n  @Input() bearing?: [number];\n  @Input() pitch?: [number];\n\n  /* Added by ngx-mapbox-gl */\n  @Input() movingMethod: 'jumpTo' | 'easeTo' | 'flyTo' = 'flyTo';\n  @Input() movingOptions?: MovingOptions;\n  @Input() fitBounds?: LngLatBoundsLike;\n  @Input() fitBoundsOptions?: {\n    linear?: boolean,\n    easing?: Function,\n    padding?: number | PaddingOptions,\n    offset?: PointLike,\n    maxZoom?: number\n  };\n  @Input() centerWithPanTo?: boolean;\n  @Input() panToOptions?: AnimationOptions;\n  @Input() cursorStyle?: string;\n\n  @Output() resize = new EventEmitter<void>();\n  @Output() remove = new EventEmitter<void>();\n  @Output() mouseDown = new EventEmitter<MapMouseEvent>();\n  @Output() mouseUp = new EventEmitter<MapMouseEvent>();\n  @Output() mouseMove = new EventEmitter<MapMouseEvent>();\n  @Output() click = new EventEmitter<MapMouseEvent>();\n  @Output() dblClick = new EventEmitter<MapMouseEvent>();\n  @Output() mouseEnter = new EventEmitter<MapMouseEvent>();\n  @Output() mouseLeave = new EventEmitter<MapMouseEvent>();\n  @Output() mouseOver = new EventEmitter<MapMouseEvent>();\n  @Output() mouseOut = new EventEmitter<MapMouseEvent>();\n  @Output() contextMenu = new EventEmitter<MapMouseEvent>();\n  @Output() touchStart = new EventEmitter<MapTouchEvent>();\n  @Output() touchEnd = new EventEmitter<MapTouchEvent>();\n  @Output() touchMove = new EventEmitter<MapTouchEvent>();\n  @Output() touchCancel = new EventEmitter<MapTouchEvent>();\n  @Output() wheel = new EventEmitter<any>(); // TODO MapWheelEvent\n  @Output() moveStart = new EventEmitter<DragEvent>(); // TODO Check type\n  @Output() move = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() moveEnd = new EventEmitter<DragEvent>();\n  @Output() dragStart = new EventEmitter<DragEvent>();\n  @Output() drag = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() dragEnd = new EventEmitter<DragEvent>();\n  @Output() zoomStart = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() zoomEvt = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() zoomEnd = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotateStart = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotate = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotateEnd = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() pitchStart = new EventEmitter<EventData>();\n  @Output() pitchEvt = new EventEmitter<EventData>();\n  @Output() pitchEnd = new EventEmitter<EventData>();\n  @Output() boxZoomStart = new EventEmitter<MapBoxZoomEvent>();\n  @Output() boxZoomEnd = new EventEmitter<MapBoxZoomEvent>();\n  @Output() boxZoomCancel = new EventEmitter<MapBoxZoomEvent>();\n  @Output() webGlContextLost = new EventEmitter<void>();\n  @Output() webGlContextRestored = new EventEmitter<void>();\n  @Output() load = new EventEmitter<any>();\n  @Output() render = new EventEmitter<void>();\n  @Output() error = new EventEmitter<any>(); // TODO Check type\n  @Output() data = new EventEmitter<EventData>();\n  @Output() styleData = new EventEmitter<EventData>();\n  @Output() sourceData = new EventEmitter<EventData>();\n  @Output() dataLoading = new EventEmitter<EventData>();\n  @Output() styleDataLoading = new EventEmitter<EventData>();\n  @Output() sourceDataLoading = new EventEmitter<EventData>();\n\n  get mapInstance(): Map {\n    return this.MapService.mapInstance;\n  }\n\n  @ViewChild('container') mapContainer: ElementRef;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngAfterViewInit() {\n    this.MapService.setup({\n      accessToken: this.accessToken,\n      customMapboxApiUrl: this.customMapboxApiUrl,\n      mapOptions: {\n        container: this.mapContainer.nativeElement,\n        minZoom: this.minZoom,\n        maxZoom: this.maxZoom,\n        style: this.style,\n        hash: this.hash,\n        interactive: this.interactive,\n        bearingSnap: this.bearingSnap,\n        pitchWithRotate: this.pitchWithRotate,\n        classes: this.classes,\n        attributionControl: this.attributionControl,\n        logoPosition: this.logoPosition,\n        failIfMajorPerformanceCaveat: this.failIfMajorPerformanceCaveat,\n        preserveDrawingBuffer: this.preserveDrawingBuffer,\n        refreshExpiredTiles: this.refreshExpiredTiles,\n        maxBounds: this.maxBounds,\n        scrollZoom: this.scrollZoom,\n        boxZoom: this.boxZoom,\n        dragRotate: this.dragRotate,\n        dragPan: this.dragPan,\n        keyboard: this.keyboard,\n        doubleClickZoom: this.doubleClickZoom,\n        touchZoomRotate: this.touchZoomRotate,\n        trackResize: this.trackResize,\n        center: this.center,\n        zoom: this.zoom,\n        bearing: this.bearing,\n        pitch: this.pitch,\n        renderWorldCopies: this.renderWorldCopies,\n        maxTileCacheSize: this.maxTileCacheSize,\n        localIdeographFontFamily: this.localIdeographFontFamily,\n        transformRequest: this.transformRequest\n      },\n      mapEvents: this\n    });\n    if (this.cursorStyle) {\n      this.MapService.changeCanvasCursor(this.cursorStyle);\n    }\n  }\n\n  ngOnDestroy() {\n    this.MapService.destroyMap();\n  }\n\n  async ngOnChanges(changes: SimpleChanges) {\n    await this.MapService.mapCreated$.toPromise();\n    if (changes.cursorStyle && !changes.cursorStyle.isFirstChange()) {\n      this.MapService.changeCanvasCursor(changes.cursorStyle.currentValue);\n    }\n    if (changes.minZoom && !changes.minZoom.isFirstChange()) {\n      this.MapService.updateMinZoom(changes.minZoom.currentValue);\n    }\n    if (changes.maxZoom && !changes.maxZoom.isFirstChange()) {\n      this.MapService.updateMaxZoom(changes.maxZoom.currentValue);\n    }\n    if (changes.scrollZoom && !changes.scrollZoom.isFirstChange()) {\n      this.MapService.updateScrollZoom(changes.scrollZoom.currentValue);\n    }\n    if (changes.dragRotate && !changes.dragRotate.isFirstChange()) {\n      this.MapService.updateDragRotate(changes.dragRotate.currentValue);\n    }\n    if (changes.touchZoomRotate && !changes.touchZoomRotate.isFirstChange()) {\n      this.MapService.updateTouchZoomRotate(changes.touchZoomRotate.currentValue);\n    }\n    if (changes.doubleClickZoom && !changes.doubleClickZoom.isFirstChange()) {\n      this.MapService.updateDoubleClickZoom(changes.doubleClickZoom.currentValue);\n    }\n    if (changes.keyboard && !changes.keyboard.isFirstChange()) {\n      this.MapService.updateKeyboard(changes.keyboard.currentValue);\n    }\n    if (changes.dragPan && !changes.dragPan.isFirstChange()) {\n      this.MapService.updateDragPan(changes.dragPan.currentValue);\n    }\n    if (changes.boxZoom && !changes.boxZoom.isFirstChange()) {\n      this.MapService.updateBoxZoom(changes.boxZoom.currentValue);\n    }\n    if (changes.style && !changes.style.isFirstChange()) {\n      this.MapService.updateStyle(changes.style.currentValue);\n    }\n    if (changes.maxBounds && !changes.maxBounds.isFirstChange()) {\n      this.MapService.updateMaxBounds(changes.maxBounds.currentValue);\n    }\n    if (changes.fitBounds && !changes.fitBounds.isFirstChange()) {\n      this.MapService.fitBounds(changes.fitBounds.currentValue, this.fitBoundsOptions);\n    }\n    if (\n      this.centerWithPanTo &&\n      changes.center && !changes.center.isFirstChange() &&\n      !changes.zoom && !changes.bearing && !changes.pitch\n    ) {\n      this.MapService.panTo(this.center!, this.panToOptions);\n    } else if (\n      changes.center && !changes.center.isFirstChange() ||\n      changes.zoom && !changes.zoom.isFirstChange() ||\n      changes.bearing && !changes.bearing.isFirstChange() ||\n      changes.pitch && !changes.pitch.isFirstChange()\n    ) {\n      this.MapService.move(\n        this.movingMethod,\n        this.movingOptions,\n        changes.zoom && this.zoom ? this.zoom[0] : undefined,\n        changes.center ? this.center : undefined,\n        changes.bearing && this.bearing ? this.bearing[0] : undefined,\n        changes.pitch && this.pitch ? this.pitch[0] : undefined\n      );\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport { fromEvent, merge, Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport supercluster, { Cluster, Options as SuperclusterOptions, Supercluster } from 'supercluster';\nimport { MapService } from '../map/map.service';\n\n@Directive({ selector: 'ng-template[mglPoint]' })\nexport class PointDirective { }\n\n@Directive({ selector: 'ng-template[mglClusterPoint]' })\nexport class ClusterPointDirective { }\n\n@Component({\n  selector: 'mgl-marker-cluster',\n  template: `\n    <ng-container *ngFor=\"let feature of clusterPoints\">\n      <ng-container *ngIf=\"feature.properties.cluster; else point\">\n        <mgl-marker\n          [feature]=\"feature\"\n        >\n          <ng-container *ngTemplateOutlet=\"clusterPointTpl; context: {\n            $implicit: feature,\n            getLeavesFn: getLeavesFn(feature),\n            getChildrenFn: getChildrenFn(feature),\n            getClusterExpansionZoomFn: getClusterExpansionZoomFn(feature)\n          }\"></ng-container>\n        </mgl-marker>\n      </ng-container>\n      <ng-template #point>\n        <mgl-marker\n          [feature]=\"feature\"\n        >\n          <ng-container *ngTemplateOutlet=\"pointTpl; context: { $implicit: feature }\"></ng-container>\n        </mgl-marker>\n      </ng-template>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false\n})\nexport class MarkerClusterComponent implements OnChanges, OnDestroy, AfterContentInit, OnInit {\n  /* Init input */\n  @Input() radius?: number;\n  @Input() maxZoom?: number;\n  @Input() minZoom?: number;\n  @Input() extent?: number;\n  @Input() nodeSize?: number;\n  @Input() log?: boolean;\n  @Input() reduce?: (accumulated: any, props: any) => void;\n  @Input() initial?: () => any;\n  @Input() map?: (props: any) => any;\n\n  /* Dynamic input */\n  @Input() data: GeoJSON.FeatureCollection<GeoJSON.Point>;\n\n  @Output() load = new EventEmitter<Supercluster>();\n\n  @ContentChild(PointDirective, { read: TemplateRef }) pointTpl: TemplateRef<any>;\n  @ContentChild(ClusterPointDirective, { read: TemplateRef }) clusterPointTpl: TemplateRef<any>;\n\n  clusterPoints: GeoJSON.Feature<GeoJSON.Point>[];\n\n  private supercluster: Supercluster;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService,\n    private ChangeDetectorRef: ChangeDetectorRef,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    const options: SuperclusterOptions = {\n      radius: this.radius,\n      maxZoom: this.maxZoom,\n      minZoom: this.minZoom,\n      extent: this.extent,\n      nodeSize: this.nodeSize,\n      log: this.log,\n      reduce: this.reduce,\n      initial: this.initial,\n      map: this.map\n    };\n    Object.keys(options)\n      .forEach((key: string) => {\n        const tkey = <keyof SuperclusterOptions>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n    this.supercluster = supercluster(options);\n    this.supercluster.load(this.data.features);\n    this.load.emit(this.supercluster);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.data && !changes.data.isFirstChange()) {\n      this.supercluster.load(this.data.features);\n    }\n  }\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      const mapMove$ = merge(\n        fromEvent(this.MapService.mapInstance, 'zoomChange'),\n        fromEvent(this.MapService.mapInstance, 'move')\n      );\n      const sub = mapMove$.pipe(\n        startWith<any>(undefined)\n      ).subscribe(() => {\n        this.zone.run(() => {\n          this.updateCluster();\n        });\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getLeavesFn = (feature: Cluster) => {\n    return (limit?: number, offset?: number) => (<any>this.supercluster.getLeaves)(feature.properties.cluster_id!, limit, offset);\n  }\n\n  getChildrenFn = (feature: Cluster) => {\n    return () => (<any>this.supercluster.getChildren)(feature.properties.cluster_id!);\n  }\n\n  getClusterExpansionZoomFn = (feature: Cluster) => {\n    return () => (<any>this.supercluster.getClusterExpansionZoom)(feature.properties.cluster_id!);\n  }\n\n  private updateCluster() {\n    const bbox = this.MapService.getCurrentViewportBbox();\n    const currentZoom = Math.round(this.MapService.mapInstance.getZoom());\n    this.clusterPoints = this.supercluster.getClusters(bbox, currentZoom);\n    this.ChangeDetectorRef.markForCheck();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewChild,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { PointLike, Popup, LngLatLike } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { MarkerComponent } from '../marker/marker.component';\n\n@Component({\n  selector: 'mgl-popup',\n  template: '<div #content><ng-content></ng-content></div>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopupComponent implements OnChanges, OnDestroy, AfterViewInit, OnInit {\n  /* Init input */\n  @Input() closeButton?: boolean;\n  @Input() closeOnClick?: boolean;\n  @Input() anchor?: 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left';\n  @Input() offset?: number | PointLike | { [anchor: string]: [number, number] };\n\n  /* Dynamic input */\n  @Input() feature?: GeoJSON.Feature<GeoJSON.Point>;\n  @Input() lngLat?: LngLatLike;\n  @Input() marker?: MarkerComponent;\n\n  @Output() close = new EventEmitter<void>();\n  @Output() open = new EventEmitter<void>();\n\n  @ViewChild('content') content: ElementRef;\n\n  popupInstance?: Popup;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    if (this.lngLat && this.marker || this.feature && this.lngLat || this.feature && this.marker) {\n      throw new Error('marker, lngLat, feature input are mutually exclusive');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.lngLat && !changes.lngLat.isFirstChange() ||\n      changes.feature && !changes.feature.isFirstChange()\n    ) {\n      const newlngLat = changes.lngLat ? this.lngLat! : this.feature!.geometry!.coordinates!;\n      this.MapService.removePopupFromMap(this.popupInstance!, true);\n      const popupInstanceTmp = this.createPopup();\n      this.MapService.addPopupToMap(popupInstanceTmp, newlngLat, this.popupInstance!.isOpen());\n      this.popupInstance = popupInstanceTmp;\n    }\n    if (changes.marker && !changes.marker.isFirstChange()) {\n      const previousMarker: MarkerComponent = changes.marker.previousValue;\n      if (previousMarker.markerInstance) {\n        this.MapService.removePopupFromMarker(previousMarker.markerInstance);\n      }\n      if (this.marker && this.marker.markerInstance && this.popupInstance) {\n        this.MapService.addPopupToMarker(this.marker.markerInstance, this.popupInstance);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    this.popupInstance = this.createPopup();\n    this.addPopup(this.popupInstance);\n  }\n\n  ngOnDestroy() {\n    if (this.popupInstance) {\n      if (this.lngLat) {\n        this.MapService.removePopupFromMap(this.popupInstance);\n      } else if (this.marker && this.marker.markerInstance) {\n        this.MapService.removePopupFromMarker(this.marker.markerInstance);\n      }\n    }\n    this.popupInstance = undefined;\n  }\n\n  private createPopup() {\n    return this.MapService.createPopup({\n      popupOptions: {\n        closeButton: this.closeButton,\n        closeOnClick: this.closeOnClick,\n        anchor: this.anchor,\n        offset: this.offset\n      },\n      popupEvents: {\n        open: this.open,\n        close: this.close\n      }\n    }, this.content.nativeElement);\n  }\n\n  private addPopup(popup: Popup) {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.lngLat || this.feature) {\n        this.MapService.addPopupToMap(popup, this.lngLat ? this.lngLat : this.feature!.geometry!.coordinates!);\n      } else if (this.marker && this.marker.markerInstance) {\n        this.MapService.addPopupToMarker(this.marker.markerInstance, popup);\n      } else {\n        throw new Error('mgl-popup need either lngLat/marker/feature to be set');\n      }\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CanvasSourceOptions } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-canvas-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CanvasSourceComponent implements OnInit, OnDestroy, OnChanges, CanvasSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() coordinates: number[][];\n  @Input() canvas: string;\n  @Input() animate?: boolean;\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.coordinates && !changes.coordinates.isFirstChange() ||\n      changes.canvas && !changes.canvas.isFirstChange() ||\n      changes.animate && !changes.animate.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    const source = {\n      type: 'canvas',\n      coordinates: this.coordinates,\n      canvas: this.canvas,\n      animate: this.animate,\n    };\n    this.MapService.addSource(this.id, source);\n    this.sourceAdded = true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { ImageSourceOptions } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-image-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageSourceComponent implements OnInit, OnDestroy, OnChanges, ImageSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url: string;\n  @Input() coordinates: number[][];\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.url && !changes.url.isFirstChange() ||\n      changes.coordinates && !changes.coordinates.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, {\n      type: 'image',\n      url: this.url,\n      coordinates: this.coordinates\n    });\n    this.sourceAdded = true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { RasterSource } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-raster-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RasterSourceComponent implements OnInit, OnDestroy, OnChanges, RasterSource {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url: string;\n  @Input() tiles?: string[];\n  @Input() bounds?: number[];\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n  @Input() tileSize?: number;\n\n  type: 'raster' = 'raster'; // Just to make ts happy\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.url && !changes.url.isFirstChange() ||\n      changes.tiles && !changes.tiles.isFirstChange() ||\n      changes.bounds && !changes.bounds.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange() ||\n      changes.tileSize && !changes.tileSize.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    const source = {\n      type: this.type,\n      url: this.url,\n      tiles: this.tiles,\n      bounds: this.bounds,\n      minzoom: this.minzoom,\n      maxzoom: this.maxzoom,\n      tileSize: this.tileSize\n    };\n    this.MapService.addSource(this.id, source);\n    this.sourceAdded = true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { VectorSource } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-vector-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VectorSourceComponent implements OnInit, OnDestroy, OnChanges, VectorSource {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url?: string;\n  @Input() tiles?: string[];\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n\n  type: 'vector' = 'vector'; // Just to make ts happy\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.url && !changes.url.isFirstChange() ||\n      changes.tiles && !changes.tiles.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, {\n      type: this.type,\n      url: this.url,\n      tiles: this.tiles,\n      minzoom: this.minzoom,\n      maxzoom: this.maxzoom,\n    });\n    this.sourceAdded = true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { VideoSourceOptions } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-video-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VideoSourceComponent implements OnInit, OnDestroy, OnChanges, VideoSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() urls: string[];\n  @Input() coordinates: number[][];\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.urls && !changes.urls.isFirstChange() ||\n      changes.coordinates && !changes.coordinates.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, {\n      type: 'video',\n      urls: this.urls,\n      coordinates: this.coordinates\n    });\n    this.sourceAdded = true;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { AttributionControlDirective } from './control/attribution-control.directive';\nimport { ControlComponent } from './control/control.component';\nimport { FullscreenControlDirective } from './control/fullscreen-control.directive';\nimport { GeocoderControlDirective, MAPBOX_GEOCODER_API_KEY } from './control/geocoder-control.directive';\nimport { GeolocateControlDirective } from './control/geolocate-control.directive';\nimport { NavigationControlDirective } from './control/navigation-control.directive';\nimport { ScaleControlDirective } from './control/scale-control.directive';\nimport { DraggableDirective } from './draggable/draggable.directive';\nimport { ImageComponent } from './image/image.component';\nimport { LayerComponent } from './layer/layer.component';\nimport { MapComponent } from './map/map.component';\nimport { MAPBOX_API_KEY } from './map/map.service';\nimport { ClusterPointDirective, MarkerClusterComponent, PointDirective } from './marker-cluster/marker-cluster.component';\nimport { MarkerComponent } from './marker/marker.component';\nimport { PopupComponent } from './popup/popup.component';\nimport { CanvasSourceComponent } from './source/canvas-source.component';\nimport { FeatureComponent } from './source/geojson/feature.component';\nimport { GeoJSONSourceComponent } from './source/geojson/geojson-source.component';\nimport { ImageSourceComponent } from './source/image-source.component';\nimport { RasterSourceComponent } from './source/raster-source.component';\nimport { VectorSourceComponent } from './source/vector-source.component';\nimport { VideoSourceComponent } from './source/video-source.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    MapComponent,\n    LayerComponent,\n    DraggableDirective,\n    ImageComponent,\n    VectorSourceComponent,\n    GeoJSONSourceComponent,\n    RasterSourceComponent,\n    ImageSourceComponent,\n    VideoSourceComponent,\n    CanvasSourceComponent,\n    FeatureComponent,\n    MarkerComponent,\n    PopupComponent,\n    ControlComponent,\n    FullscreenControlDirective,\n    NavigationControlDirective,\n    GeocoderControlDirective,\n    GeolocateControlDirective,\n    AttributionControlDirective,\n    ScaleControlDirective,\n    PointDirective,\n    ClusterPointDirective,\n    MarkerClusterComponent\n  ],\n  exports: [\n    MapComponent,\n    LayerComponent,\n    DraggableDirective,\n    ImageComponent,\n    VectorSourceComponent,\n    GeoJSONSourceComponent,\n    RasterSourceComponent,\n    ImageSourceComponent,\n    VideoSourceComponent,\n    CanvasSourceComponent,\n    FeatureComponent,\n    MarkerComponent,\n    PopupComponent,\n    ControlComponent,\n    FullscreenControlDirective,\n    NavigationControlDirective,\n    GeocoderControlDirective,\n    GeolocateControlDirective,\n    AttributionControlDirective,\n    ScaleControlDirective,\n    PointDirective,\n    ClusterPointDirective,\n    MarkerClusterComponent\n  ]\n})\nexport class NgxMapboxGLModule {\n  static withConfig(config: { accessToken: string, geocoderAccessToken?: string }): ModuleWithProviders {\n    return {\n      ngModule: NgxMapboxGLModule,\n      providers: [\n        {\n          provide: MAPBOX_API_KEY,\n          useValue: config.accessToken\n        },\n        {\n          provide: MAPBOX_GEOCODER_API_KEY,\n          useValue: config.geocoderAccessToken || config.accessToken\n        }\n      ],\n    };\n  }\n}\n"]}
{"version":3,"sources":["null","ng://ngx-mapbox-gl/lib/map/map.service.ts","ng://ngx-mapbox-gl/lib/control/control.component.ts","ng://ngx-mapbox-gl/lib/control/attribution-control.directive.ts","ng://ngx-mapbox-gl/lib/control/fullscreen-control.directive.ts","ng://ngx-mapbox-gl/lib/control/geocoder-control.directive.ts","ng://ngx-mapbox-gl/lib/control/geolocate-control.directive.ts","ng://ngx-mapbox-gl/lib/control/navigation-control.directive.ts","ng://ngx-mapbox-gl/lib/control/scale-control.directive.ts","ng://ngx-mapbox-gl/lib/marker/marker.component.ts","ng://ngx-mapbox-gl/lib/source/geojson/geojson-source.component.ts","ng://ngx-mapbox-gl/lib/source/geojson/feature.component.ts","ng://ngx-mapbox-gl/lib/draggable/draggable.directive.ts","ng://ngx-mapbox-gl/lib/image/image.component.ts","ng://ngx-mapbox-gl/lib/layer/layer.component.ts","ng://ngx-mapbox-gl/lib/map/map.component.ts","ng://ngx-mapbox-gl/lib/marker-cluster/marker-cluster.component.ts","ng://ngx-mapbox-gl/lib/popup/popup.component.ts","ng://ngx-mapbox-gl/lib/source/canvas-source.component.ts","ng://ngx-mapbox-gl/lib/source/image-source.component.ts","ng://ngx-mapbox-gl/lib/source/raster-source.component.ts","ng://ngx-mapbox-gl/lib/source/vector-source.component.ts","ng://ngx-mapbox-gl/lib/source/video-source.component.ts","ng://ngx-mapbox-gl/lib/ngx-mapbox-gl.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","MAPBOX_API_KEY","InjectionToken","MglResizeEventEmitter","MapService","zone","AsyncSubject","Subscription","mapCreated$","mapCreated","asObservable","mapLoaded$","mapLoaded","setup","options","_this","onStable","pipe","first","subscribe","MapboxGl","accessToken","customMapboxApiUrl","createMap","mapOptions","hookEvents","mapEvents","undefined","complete","destroyMap","subscription","unsubscribe","mapInstance","remove","updateMinZoom","minZoom","runOutsideAngular","setMinZoom","updateMaxZoom","maxZoom","setMaxZoom","updateScrollZoom","status","scrollZoom","enable","disable","updateDragRotate","dragRotate","updateTouchZoomRotate","touchZoomRotate","updateDoubleClickZoom","doubleClickZoom","updateKeyboard","keyboard","updateDragPan","dragPan","updateBoxZoom","boxZoom","updateStyle","style","setStyle","updateMaxBounds","maxBounds","setMaxBounds","changeCanvasCursor","cursor","getCanvasContainer","queryRenderedFeatures","pointOrBox","parameters","panTo","center","move","movingMethod","movingOptions","zoom","bearing","pitch","getZoom","getCenter","getBearing","getPitch","addLayer","layer","before","keys","layerOptions","forEach","key","tkey","layerEvents","click","observers","on","id","evt","run","emit","mouseEnter","mouseLeave","mouseMove","removeLayer","layerId","layerIdsToRemove","addMarker","marker","addTo","removeMarker","markersToRemove","createPopup","popup","element","popupOptions","popupInstance","MapboxGl.Popup","setDOMContent","popupEvents","close","open","addPopupToMap","lngLat","setLngLat","addPopupToMarker","setPopup","removePopupFromMap","popupsToRemove","removePopupFromMarker","addControl","control","position","removeControl","loadAndAddImage","imageId","url","loadImage","error","image","addImage","data","removeImage","imageIdsToRemove","addSource","sourceId","source","getSource","removeSource","sourceIdsToRemove","setAllLayerPaintProperty","paint","setPaintProperty","setAllLayerLayoutProperty","layout","setLayoutProperty","setLayerFilter","filter","setFilter","setLayerBefore","beforeId","moveLayer","setLayerZoomRange","fitBounds","bounds","getCurrentViewportBbox","canvas","getCanvas","w","width","h","height","upLeft","unproject","toArray","upRight","downRight","downLeft","bbox","polygon","applyChanges","removeLayers","removeSources","removeMarkers","removePopups","removeImages","NgZone","assertNotInAngularZone","MapboxGl.Map","subChanges","onMicrotaskEmpty","subResize","resizeEvent","resize","add","_a","tslib_1.__values","_b","off","events","load","mouseDown","mouseUp","dblClick","mouseOver","mouseOut","contextMenu","touchStart","touchEnd","touchMove","touchCancel","wheel","moveStart","moveEnd","dragStart","drag","dragEnd","zoomStart","zoomEvt","zoomEnd","rotateStart","rotate","rotateEnd","pitchStart","pitchEvt","pitchEnd","boxZoomStart","boxZoomEnd","boxZoomCancel","webGlContextLost","webGlContextRestored","render","styleData","sourceData","dataLoading","styleDataLoading","sourceDataLoading","obj","prop","split","shift","toString","Injectable","Optional","type","Inject","args","decorators","CustomControl","container","onAdd","onRemove","removeChild","getDefaultPosition","ControlComponent","ngAfterContentInit","content","nativeElement","childNodes","ngOnDestroy","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","Input","ViewChild","AttributionControlDirective","ngOnInit","Error","compact","AttributionControl","Directive","Host","FullscreenControlDirective","FullscreenControl","MapboxGeocoder","require","MAPBOX_GEOCODER_API_KEY","GeocoderControlDirective","EventEmitter","proximity","country","placeholder","types","flyTo","minLength","limit","language","localGeocoder","geocoder","searchInput","query","ngOnChanges","changes","isFirstChange","setProximity","currentValue","results","loading","clear","Output","GeolocateControlDirective","positionOptions","fitBoundsOptions","trackUserLocation","showUserLocation","GeolocateControl","NavigationControlDirective","NavigationControl","ScaleControlDirective","setUnit","maxWidth","unit","ScaleControl","MarkerComponent","feature","coordinates","ngAfterViewInit","markerInstance","Marker","offset","anchor","togglePopup","updateCoordinates","styles","encapsulation","ViewEncapsulation","None","GeoJSONSourceComponent","Subject","features","maxzoom","minzoom","buffer","tolerance","cluster","clusterRadius","clusterMaxZoom","sub","updateFeatureData","debounceTime","setData","sourceAdded","addFeature","removeFeature","collection","index","indexOf","splice","getNewFeatureId","featureIdCounter","FeatureComponent","geometry","properties","forwardRef","DraggableDirective","ReplaySubject","enter$","leave$","updateCoords","markerElement","children","fromEvent","bind","handleDraggable","destroyed$","moving","inside","mouseUp$","dragStart$","takeUntil","filterFeature","tap","switchMap","dragging$","dragEnd$","take","lng","lat","point","layers","ImageComponent","imageAdded","loaded","error_1","LayerComponent","metadata","source-layer","sourceLayer","layerAdded","MapComponent","defineProperty","mapContainer","hash","interactive","bearingSnap","pitchWithRotate","classes","attributionControl","logoPosition","failIfMajorPerformanceCaveat","preserveDrawingBuffer","refreshExpiredTiles","trackResize","renderWorldCopies","maxTileCacheSize","localIdeographFontFamily","transformRequest","cursorStyle","toPromise","centerWithPanTo","panToOptions","providers","PointDirective","MarkerClusterComponent","ChangeDetectorRef","supercluster","radius","extent","nodeSize","log","reduce","initial","map","merge","startWith","updateCluster","currentZoom","Math","round","clusterPoints","getClusters","markForCheck","preserveWhitespaces","ContentChild","read","TemplateRef","ClusterPointDirective","PopupComponent","popupInstanceTmp","previousMarker","previousValue","addPopup","closeButton","closeOnClick","CanvasSourceComponent","animate","ImageSourceComponent","RasterSourceComponent","tiles","tileSize","VectorSourceComponent","VideoSourceComponent","urls","NgxMapboxGLModule","withConfig","config","ngModule","provide","useValue","geocoderAccessToken","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { EventEmitter, Inject, Injectable, InjectionToken, NgZone, Optional } from '@angular/core';\nimport bbox from '@turf/bbox';\nimport { polygon } from '@turf/helpers';\nimport * as MapboxGl from 'mapbox-gl';\nimport { AsyncSubject, Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { BBox } from 'supercluster';\nimport { MapEvent, MapImageData, MapImageOptions } from './map.types';\n\nexport const MAPBOX_API_KEY = new InjectionToken('MapboxApiKey');\n\nexport abstract class MglResizeEventEmitter {\n  abstract resizeEvent: Observable<void>;\n}\n\nexport interface SetupMap {\n  accessToken?: string;\n  customMapboxApiUrl?: string;\n  mapOptions: any; // MapboxGl.MapboxOptions\n  mapEvents: MapEvent;\n}\n\nexport interface SetupLayer {\n  layerOptions: MapboxGl.Layer;\n  layerEvents: {\n    click: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseEnter: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseLeave: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseMove: EventEmitter<MapboxGl.MapMouseEvent>;\n  };\n}\n\nexport interface SetupPopup {\n  popupOptions: MapboxGl.PopupOptions;\n  popupEvents: {\n    open: EventEmitter<void>;\n    close: EventEmitter<void>;\n  };\n}\n\nexport type AllSource = MapboxGl.VectorSource |\n  MapboxGl.RasterSource |\n  MapboxGl.GeoJSONSource |\n  MapboxGl.ImageSourceOptions |\n  MapboxGl.VideoSource |\n  MapboxGl.GeoJSONSourceRaw |\n  MapboxGl.CanvasSourceOptions;\n\nexport type MovingOptions = MapboxGl.FlyToOptions |\n  (MapboxGl.AnimationOptions & MapboxGl.CameraOptions) |\n  MapboxGl.CameraOptions;\n\n@Injectable()\nexport class MapService {\n  mapInstance: MapboxGl.Map;\n  mapCreated$: Observable<void>;\n  mapLoaded$: Observable<void>;\n  mapEvents: MapEvent;\n\n  private mapCreated = new AsyncSubject<void>();\n  private mapLoaded = new AsyncSubject<void>();\n  private layerIdsToRemove: string[] = [];\n  private sourceIdsToRemove: string[] = [];\n  private markersToRemove: MapboxGl.Marker[] = [];\n  private popupsToRemove: MapboxGl.Popup[] = [];\n  private imageIdsToRemove: string[] = [];\n  private subscription = new Subscription();\n\n  constructor(\n    private zone: NgZone,\n    @Optional() @Inject(MAPBOX_API_KEY) private readonly MAPBOX_API_KEY: string,\n    @Optional() private readonly MglResizeEventEmitter: MglResizeEventEmitter\n  ) {\n    this.mapCreated$ = this.mapCreated.asObservable();\n    this.mapLoaded$ = this.mapLoaded.asObservable();\n  }\n\n  setup(options: SetupMap) {\n    // Need onStable to wait for a potential @angular/route transition to end\n    this.zone.onStable.pipe(first()).subscribe(() => {\n      // Workaround rollup issue\n      this.assign(MapboxGl, 'accessToken', options.accessToken || this.MAPBOX_API_KEY);\n      if (options.customMapboxApiUrl) {\n        this.assign(MapboxGl, 'config.API_URL', options.customMapboxApiUrl);\n      }\n      this.createMap(options.mapOptions);\n      this.hookEvents(options.mapEvents);\n      this.mapEvents = options.mapEvents;\n      this.mapCreated.next(undefined);\n      this.mapCreated.complete();\n    });\n  }\n\n  destroyMap() {\n    this.subscription.unsubscribe();\n    this.mapInstance.remove();\n  }\n\n  updateMinZoom(minZoom: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMinZoom(minZoom);\n    });\n  }\n\n  updateMaxZoom(maxZoom: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMaxZoom(maxZoom);\n    });\n  }\n\n  updateScrollZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.scrollZoom.enable() : this.mapInstance.scrollZoom.disable();\n    });\n  }\n\n  updateDragRotate(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.dragRotate.enable() : this.mapInstance.dragRotate.disable();\n    });\n  }\n\n  updateTouchZoomRotate(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.touchZoomRotate.enable() : this.mapInstance.touchZoomRotate.disable();\n    });\n  }\n\n  updateDoubleClickZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.doubleClickZoom.enable() : this.mapInstance.doubleClickZoom.disable();\n    });\n  }\n\n  updateKeyboard(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.keyboard.enable() : this.mapInstance.keyboard.disable();\n    });\n  }\n\n  updateDragPan(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.dragPan.enable() : this.mapInstance.dragPan.disable();\n    });\n  }\n\n  updateBoxZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.boxZoom.enable() : this.mapInstance.boxZoom.disable();\n    });\n  }\n\n  updateStyle(style: MapboxGl.Style) {\n    // TODO Probably not so simple, write demo/tests\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setStyle(style);\n    });\n  }\n\n  updateMaxBounds(maxBounds: MapboxGl.LngLatBoundsLike) {\n    // TODO Probably not so simple, write demo/tests\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMaxBounds(maxBounds);\n    });\n  }\n\n  changeCanvasCursor(cursor: string) {\n    const canvas = this.mapInstance.getCanvasContainer();\n    canvas.style.cursor = cursor;\n  }\n\n  queryRenderedFeatures(\n    pointOrBox?: MapboxGl.PointLike | MapboxGl.PointLike[],\n    parameters?: { layers?: string[], filter?: any[] }\n  ): GeoJSON.Feature<GeoJSON.GeometryObject>[] {\n    return this.mapInstance.queryRenderedFeatures(pointOrBox, parameters);\n  }\n\n  panTo(center: MapboxGl.LngLatLike, options?: MapboxGl.AnimationOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.panTo(center, options);\n    });\n  }\n\n  move(\n    movingMethod: 'jumpTo' | 'easeTo' | 'flyTo',\n    movingOptions?: MovingOptions,\n    zoom?: number,\n    center?: MapboxGl.LngLatLike,\n    bearing?: number,\n    pitch?: number\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      (<any>this.mapInstance[movingMethod])({\n        ...movingOptions,\n        zoom: zoom ? zoom : this.mapInstance.getZoom(),\n        center: center ? center : this.mapInstance.getCenter(),\n        bearing: bearing ? bearing : this.mapInstance.getBearing(),\n        pitch: pitch ? pitch : this.mapInstance.getPitch()\n      });\n    });\n  }\n\n  addLayer(layer: SetupLayer, before?: string) {\n    this.zone.runOutsideAngular(() => {\n      Object.keys(layer.layerOptions)\n        .forEach((key: string) => {\n          const tkey = <keyof MapboxGl.Layer>key;\n          if (layer.layerOptions[tkey] === undefined) {\n            delete layer.layerOptions[tkey];\n          }\n        });\n      this.mapInstance.addLayer(layer.layerOptions, before);\n      if (layer.layerEvents.click.observers.length) {\n        this.mapInstance.on('click', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n          this.zone.run(() => {\n            layer.layerEvents.click.emit(evt);\n          });\n        });\n      }\n      if (layer.layerEvents.mouseEnter.observers.length) {\n        this.mapInstance.on('mouseenter', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n          this.zone.run(() => {\n            layer.layerEvents.mouseEnter.emit(evt);\n          });\n        });\n      }\n      if (layer.layerEvents.mouseLeave.observers.length) {\n        this.mapInstance.on('mouseleave', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n          this.zone.run(() => {\n            layer.layerEvents.mouseLeave.emit(evt);\n          });\n        });\n      }\n      if (layer.layerEvents.mouseMove.observers.length) {\n        this.mapInstance.on('mousemove', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n          this.zone.run(() => {\n            layer.layerEvents.mouseMove.emit(evt);\n          });\n        });\n      }\n    });\n  }\n\n  removeLayer(layerId: string) {\n    this.layerIdsToRemove.push(layerId);\n  }\n\n  addMarker(marker: MapboxGl.Marker) {\n    return this.zone.runOutsideAngular(() => {\n      marker.addTo(this.mapInstance);\n    });\n  }\n\n  removeMarker(marker: MapboxGl.Marker) {\n    this.markersToRemove.push(marker);\n  }\n\n  createPopup(popup: SetupPopup, element: Node) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(popup.popupOptions)\n        .forEach((key) =>\n          (<any>popup.popupOptions)[key] === undefined && delete (<any>popup.popupOptions)[key]);\n      const popupInstance = new MapboxGl.Popup(popup.popupOptions);\n      popupInstance.setDOMContent(element);\n      if (popup.popupEvents.close.observers.length) {\n        popupInstance.on('close', () => {\n          this.zone.run(() => {\n            popup.popupEvents.close.emit();\n          });\n        });\n      }\n      if (popup.popupEvents.open.observers.length) {\n        popupInstance.on('open', () => {\n          this.zone.run(() => {\n            popup.popupEvents.open.emit();\n          });\n        });\n      }\n      return popupInstance;\n    });\n  }\n\n  addPopupToMap(popup: MapboxGl.Popup, lngLat: MapboxGl.LngLatLike) {\n    return this.zone.runOutsideAngular(() => {\n      popup.setLngLat(lngLat);\n      popup.addTo(this.mapInstance);\n    });\n  }\n\n  addPopupToMarker(marker: MapboxGl.Marker, popup: MapboxGl.Popup) {\n    return this.zone.runOutsideAngular(() => {\n      marker.setPopup(popup);\n    });\n  }\n\n  removePopupFromMap(popup: MapboxGl.Popup) {\n    this.popupsToRemove.push(popup);\n  }\n\n  removePopupFromMarker(marker: MapboxGl.Marker) {\n    return this.zone.runOutsideAngular(() => {\n      marker.setPopup(undefined);\n    });\n  }\n\n  addControl(control: MapboxGl.Control | MapboxGl.IControl, position?: 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left') {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.addControl(<any>control, position);\n    });\n  }\n\n  removeControl(control: MapboxGl.Control | MapboxGl.IControl) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.removeControl(<any>control);\n    });\n  }\n\n  async loadAndAddImage(imageId: string, url: string, options?: MapImageOptions) {\n    return this.zone.runOutsideAngular(() => {\n      return new Promise((resolve, reject) => {\n        this.mapInstance.loadImage(url, (error: { status: number } | null, image: ImageData) => {\n          if (error) {\n            reject(error);\n            return;\n          }\n          this.addImage(imageId, image, options);\n          resolve();\n        });\n      });\n    });\n  }\n\n  addImage(imageId: string, data: MapImageData, options?: MapImageOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.addImage(imageId, <any>data, options);\n    });\n  }\n\n  removeImage(imageId: string) {\n    this.imageIdsToRemove.push(imageId);\n  }\n\n  addSource(sourceId: string, source: AllSource) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(source)\n        .forEach((key) =>\n          (<any>source)[key] === undefined && delete (<any>source)[key]);\n      this.mapInstance.addSource(sourceId, <any>source); // Typings issue\n    });\n  }\n\n  getSource<T>(sourceId: string) {\n    return <T><any>this.mapInstance.getSource(sourceId);\n  }\n\n  removeSource(sourceId: string) {\n    this.sourceIdsToRemove.push(sourceId);\n  }\n\n  setAllLayerPaintProperty(\n    layerId: string,\n    paint: MapboxGl.BackgroundPaint |\n      MapboxGl.FillPaint |\n      MapboxGl.FillExtrusionPaint |\n      MapboxGl.LinePaint |\n      MapboxGl.SymbolPaint |\n      MapboxGl.RasterPaint |\n      MapboxGl.CirclePaint\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(paint).forEach((key) => {\n        // TODO Check for perf, setPaintProperty only on changed paint props maybe\n        this.mapInstance.setPaintProperty(layerId, key, (<any>paint)[key]);\n      });\n    });\n  }\n\n  setAllLayerLayoutProperty(\n    layerId: string,\n    layout: MapboxGl.BackgroundLayout |\n      MapboxGl.FillLayout |\n      MapboxGl.FillExtrusionLayout |\n      MapboxGl.LineLayout |\n      MapboxGl.SymbolLayout |\n      MapboxGl.RasterLayout |\n      MapboxGl.CircleLayout\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(layout).forEach((key) => {\n        // TODO Check for perf, setPaintProperty only on changed paint props maybe\n        this.mapInstance.setLayoutProperty(layerId, key, (<any>layout)[key]);\n      });\n    });\n  }\n\n  setLayerFilter(layerId: string, filter: any[]) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setFilter(layerId, filter);\n    });\n  }\n\n  setLayerBefore(layerId: string, beforeId: string) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.moveLayer(layerId, beforeId);\n    });\n  }\n\n  setLayerZoomRange(layerId: string, minZoom?: number, maxZoom?: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setLayerZoomRange(layerId, minZoom ? minZoom : 0, maxZoom ? maxZoom : 20);\n    });\n  }\n\n  fitBounds(bounds: MapboxGl.LngLatBoundsLike, options?: any) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.fitBounds(bounds, options);\n    });\n  }\n\n  getCurrentViewportBbox(): BBox {\n    const canvas = this.mapInstance.getCanvas();\n    const w = canvas.width;\n    const h = canvas.height;\n    const upLeft = this.mapInstance.unproject([0, 0]).toArray();\n    const upRight = this.mapInstance.unproject([w, 0]).toArray();\n    const downRight = this.mapInstance.unproject([w, h]).toArray();\n    const downLeft = this.mapInstance.unproject([0, h]).toArray();\n    return <any>bbox(polygon([[upLeft, upRight, downRight, downLeft, upLeft]]));\n  }\n\n  applyChanges() {\n    this.zone.runOutsideAngular(() => {\n      this.removeLayers();\n      this.removeSources();\n      this.removeMarkers();\n      this.removePopups();\n      this.removeImages();\n    });\n  }\n\n  private createMap(options: MapboxGl.MapboxOptions) {\n    NgZone.assertNotInAngularZone();\n    Object.keys(options)\n      .forEach((key: string) => {\n        const tkey = <keyof MapboxGl.MapboxOptions>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n    this.mapInstance = new MapboxGl.Map(options);\n    const subChanges = this.zone.onMicrotaskEmpty\n      .subscribe(() => this.applyChanges());\n    if (this.MglResizeEventEmitter) {\n      const subResize = this.MglResizeEventEmitter.resizeEvent.subscribe(() => {\n        this.mapInstance.resize();\n      });\n      this.subscription.add(subResize);\n    }\n    this.subscription.add(subChanges);\n  }\n\n  private removeLayers() {\n    for (const layerId of this.layerIdsToRemove) {\n      this.mapInstance.off('click', layerId);\n      this.mapInstance.off('mouseenter', layerId);\n      this.mapInstance.off('mouseleave', layerId);\n      this.mapInstance.off('mousemove', layerId);\n      this.mapInstance.removeLayer(layerId);\n    }\n    this.layerIdsToRemove = [];\n  }\n\n  private removeSources() {\n    for (const sourceId of this.sourceIdsToRemove) {\n      this.mapInstance.removeSource(sourceId);\n    }\n    this.sourceIdsToRemove = [];\n  }\n\n  private removeMarkers() {\n    for (const marker of this.markersToRemove) {\n      marker.remove();\n    }\n    this.markersToRemove = [];\n  }\n\n  private removePopups() {\n    for (const popup of this.popupsToRemove) {\n      popup.remove();\n    }\n    this.popupsToRemove = [];\n  }\n\n  private removeImages() {\n    for (const imageId of this.imageIdsToRemove) {\n      this.mapInstance.removeImage(imageId);\n    }\n    this.imageIdsToRemove = [];\n  }\n\n  private hookEvents(events: MapEvent) {\n    this.mapInstance.on('load', () => {\n      this.mapLoaded.next(undefined);\n      this.mapLoaded.complete();\n      this.zone.run(() => events.load.emit(this.mapInstance));\n    });\n    if (events.resize.observers.length) {\n      this.mapInstance.on('resize', () => this.zone.run(() => events.resize.emit()));\n    }\n    if (events.remove.observers.length) {\n      this.mapInstance.on('remove', () => this.zone.run(() => events.remove.emit()));\n    }\n    if (events.mouseDown.observers.length) {\n      this.mapInstance.on('mousedown', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseDown.emit(evt)));\n    }\n    if (events.mouseUp.observers.length) {\n      this.mapInstance.on('mouseup', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseUp.emit(evt)));\n    }\n    if (events.mouseMove.observers.length) {\n      this.mapInstance.on('mousemove', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseMove.emit(evt)));\n    }\n    if (events.click.observers.length) {\n      this.mapInstance.on('click', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.click.emit(evt)));\n    }\n    if (events.dblClick.observers.length) {\n      this.mapInstance.on('dblclick', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.dblClick.emit(evt)));\n    }\n    if (events.mouseEnter.observers.length) {\n      this.mapInstance.on('mouseenter', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseEnter.emit(evt)));\n    }\n    if (events.mouseLeave.observers.length) {\n      this.mapInstance.on('mouseleave', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseLeave.emit(evt)));\n    }\n    if (events.mouseOver.observers.length) {\n      this.mapInstance.on('mouseover', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseOver.emit(evt)));\n    }\n    if (events.mouseOut.observers.length) {\n      this.mapInstance.on('mouseout', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseOut.emit(evt)));\n    }\n    if (events.contextMenu.observers.length) {\n      this.mapInstance.on('contextmenu', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.contextMenu.emit(evt)));\n    }\n    if (events.touchStart.observers.length) {\n      this.mapInstance.on('touchstart', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchStart.emit(evt)));\n    }\n    if (events.touchEnd.observers.length) {\n      this.mapInstance.on('touchend', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchEnd.emit(evt)));\n    }\n    if (events.touchMove.observers.length) {\n      this.mapInstance.on('touchmove', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchMove.emit(evt)));\n    }\n    if (events.touchCancel.observers.length) {\n      this.mapInstance.on('touchcancel', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchCancel.emit(evt)));\n    }\n    if (events.wheel.observers.length) {\n      // MapboxGl.MapWheelEvent\n      this.mapInstance.on('wheel', (evt: any) => this.zone.run(() => events.wheel.emit(evt)));\n    }\n    if (events.moveStart.observers.length) {\n      this.mapInstance.on('movestart', (evt: DragEvent) => this.zone.run(() => events.moveStart.emit(evt)));\n    }\n    if (events.move.observers.length) {\n      this.mapInstance.on('move', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.move.emit(evt)));\n    }\n    if (events.moveEnd.observers.length) {\n      this.mapInstance.on('moveend', (evt: DragEvent) => this.zone.run(() => events.moveEnd.emit(evt)));\n    }\n    if (events.dragStart.observers.length) {\n      this.mapInstance.on('dragstart', (evt: DragEvent) => this.zone.run(() => events.dragStart.emit(evt)));\n    }\n    if (events.drag.observers.length) {\n      this.mapInstance.on('drag', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.drag.emit(evt)));\n    }\n    if (events.dragEnd.observers.length) {\n      this.mapInstance.on('dragend', (evt: DragEvent) => this.zone.run(() => events.dragEnd.emit(evt)));\n    }\n    if (events.zoomStart.observers.length) {\n      this.mapInstance.on('zoomstart', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.zoomStart.emit(evt)));\n    }\n    if (events.zoomEvt.observers.length) {\n      this.mapInstance.on('zoom', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.zoomEvt.emit(evt)));\n    }\n    if (events.zoomEnd.observers.length) {\n      this.mapInstance.on('zoomend', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.zoomEnd.emit(evt)));\n    }\n    if (events.rotateStart.observers.length) {\n      this.mapInstance.on('rotatestart', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.rotateStart.emit(evt)));\n    }\n    if (events.rotate.observers.length) {\n      this.mapInstance.on('rotate', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.rotate.emit(evt)));\n    }\n    if (events.rotateEnd.observers.length) {\n      this.mapInstance.on('rotateend', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.rotateEnd.emit(evt)));\n    }\n    if (events.pitchStart.observers.length) {\n      this.mapInstance.on('pitchstart', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchStart.emit(evt)));\n    }\n    if (events.pitchEvt.observers.length) {\n      this.mapInstance.on('pitch', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchEvt.emit(evt)));\n    }\n    if (events.pitchEnd.observers.length) {\n      this.mapInstance.on('pitchend', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchEnd.emit(evt)));\n    }\n    if (events.boxZoomStart.observers.length) {\n      this.mapInstance.on('boxzoomstart', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomStart.emit(evt)));\n    }\n    if (events.boxZoomEnd.observers.length) {\n      this.mapInstance.on('boxzoomend', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomEnd.emit(evt)));\n    }\n    if (events.boxZoomCancel.observers.length) {\n      this.mapInstance.on('boxzoomcancel', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomCancel.emit(evt)));\n    }\n    if (events.webGlContextLost.observers.length) {\n      this.mapInstance.on('webglcontextlost', () => this.zone.run(() => events.webGlContextLost.emit()));\n    }\n    if (events.webGlContextRestored.observers.length) {\n      this.mapInstance.on('webglcontextrestored', () => this.zone.run(() => events.webGlContextRestored.emit()));\n    }\n    if (events.render.observers.length) {\n      this.mapInstance.on('render', () => this.zone.run(() => events.render.emit()));\n    }\n    if (events.error.observers.length) {\n      this.mapInstance.on('error', () => this.zone.run(() => events.error.emit()));\n    }\n    if (events.data.observers.length) {\n      this.mapInstance.on('data', (evt: MapboxGl.EventData) => this.zone.run(() => events.data.emit(evt)));\n    }\n    if (events.styleData.observers.length) {\n      this.mapInstance.on('styledata', (evt: MapboxGl.EventData) => this.zone.run(() => events.styleData.emit(evt)));\n    }\n    if (events.sourceData.observers.length) {\n      this.mapInstance.on('sourcedata', (evt: MapboxGl.EventData) => this.zone.run(() => events.sourceData.emit(evt)));\n    }\n    if (events.dataLoading.observers.length) {\n      this.mapInstance.on('dataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.dataLoading.emit(evt)));\n    }\n    if (events.styleDataLoading.observers.length) {\n      this.mapInstance.on('styledataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.styleDataLoading.emit(evt)));\n    }\n    if (events.sourceDataLoading.observers.length) {\n      this.mapInstance.on('sourcedataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.sourceDataLoading.emit(evt)));\n    }\n  }\n\n  // TODO move this elsewhere\n  private assign(obj: any, prop: any, value: any) {\n    if (typeof prop === 'string') {\n      // tslint:disable-next-line:no-parameter-reassignment\n      prop = prop.split('.');\n    }\n    if (prop.length > 1) {\n      const e = prop.shift();\n      this.assign(obj[e] =\n        Object.prototype.toString.call(obj[e]) === '[object Object]'\n          ? obj[e]\n          : {},\n        prop,\n        value);\n    } else {\n      obj[prop[0]] = value;\n    }\n  }\n}\n","import { Control, IControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\n\nexport class CustomControl implements IControl {\n  constructor(\n    private container: HTMLElement\n  ) {\n  }\n\n  onAdd() {\n    return this.container;\n  }\n\n  onRemove() {\n    return this.container.parentNode!.removeChild(this.container);\n  }\n\n  getDefaultPosition() {\n    return 'top-right';\n  }\n}\n\n@Component({\n  selector: 'mgl-control',\n  template: '<div class=\"mapboxgl-ctrl\" #content><ng-content></ng-content></div>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ControlComponent implements OnDestroy, AfterContentInit {\n  /* Init inputs */\n  @Input() position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\n  @ViewChild('content') content: ElementRef;\n\n  control: Control | IControl;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngAfterContentInit() {\n    if (this.content.nativeElement.childNodes.length) {\n      this.control = new CustomControl(this.content.nativeElement);\n      this.MapService.mapCreated$.subscribe(() => {\n        this.MapService.addControl(this.control!, this.position);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.MapService.removeControl(this.control);\n  }\n}\n","import { Directive, Host, Input, OnInit } from '@angular/core';\nimport { AttributionControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglAttribution]'\n})\nexport class AttributionControlDirective implements OnInit {\n  /* Init inputs */\n  @Input() compact?: boolean;\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { compact?: boolean } = {};\n      if (this.compact !== undefined) {\n        options.compact = this.compact;\n      }\n      this.ControlComponent.control = new AttributionControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { Directive, OnInit, Host } from '@angular/core';\nimport { FullscreenControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglFullscreen]'\n})\nexport class FullscreenControlDirective implements OnInit {\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      this.ControlComponent.control = new FullscreenControl();\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Host,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnChanges,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges\n  } from '@angular/core';\nimport { MapService } from '../map/map.service';\nimport { GeocoderEvent } from '../map/map.types';\nimport { ControlComponent } from './control.component';\n\nconst MapboxGeocoder = require('@mapbox/mapbox-gl-geocoder');\n\nexport const MAPBOX_GEOCODER_API_KEY = new InjectionToken('MapboxApiKey');\n\nexport interface LngLatLiteral {\n  latitude: number;\n  longitude: number;\n}\n\nexport interface Results extends GeoJSON.FeatureCollection<GeoJSON.Point> {\n  attribution: string;\n  query: string[];\n}\n\nexport interface Result extends GeoJSON.Feature<GeoJSON.Point> {\n  bbox: [number, number, number, number];\n  center: number[];\n  place_name: string;\n  place_type: string[];\n  relevance: number;\n  text: string;\n  address: string;\n  context: any[];\n}\n\n@Directive({\n  selector: '[mglGeocoder]'\n})\nexport class GeocoderControlDirective implements OnInit, OnChanges, GeocoderEvent {\n  /* Init inputs */\n  @Input() country?: string;\n  @Input() placeholder?: string;\n  @Input() zoom?: number;\n  @Input() bbox?: [number, number, number, number];\n  @Input() types?: string;\n  @Input() flyTo?: boolean;\n  @Input() minLength?: number;\n  @Input() limit?: number;\n  @Input() language?: string;\n  @Input() accessToken?: string;\n  @Input() filter?: (feature: Result) => boolean;\n  @Input() localGeocoder?: (query: string) => Result[];\n\n  /* Dynamic inputs */\n  @Input() proximity?: LngLatLiteral;\n  @Input() searchInput?: string;\n\n  @Output() clear = new EventEmitter<void>();\n  @Output() loading = new EventEmitter<{ query: string }>();\n  @Output() results = new EventEmitter<Results>();\n  @Output() result = new EventEmitter<{ result: Result }>();\n  @Output() error = new EventEmitter<any>();\n\n  geocoder: any;\n\n  constructor(\n    private MapService: MapService,\n    private zone: NgZone,\n    @Host() private ControlComponent: ControlComponent,\n    @Optional() @Inject(MAPBOX_GEOCODER_API_KEY) private readonly MAPBOX_GEOCODER_API_KEY: string\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options = {\n        proximity: this.proximity,\n        country: this.country,\n        placeholder: this.placeholder,\n        zoom: this.zoom,\n        bbox: this.bbox,\n        types: this.types,\n        flyTo: this.flyTo,\n        minLength: this.minLength,\n        limit: this.limit,\n        language: this.language,\n        filter: this.filter,\n        localGeocoder: this.localGeocoder,\n        accessToken: this.accessToken || this.MAPBOX_GEOCODER_API_KEY\n      };\n\n      Object.keys(options).forEach((key: string) => {\n        const tkey = <keyof typeof options>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n      this.geocoder = new MapboxGeocoder(options);\n      this.hookEvents(this);\n      this.addControl();\n    });\n    if (this.searchInput) {\n      this.MapService.mapLoaded$.subscribe(() => {\n        this.geocoder.query(this.searchInput);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.geocoder) {\n      return;\n    }\n    if (changes.proximity && !changes.proximity.isFirstChange()) {\n      this.geocoder.setProximity(changes.proximity.currentValue);\n    }\n    if (changes.searchInput) {\n      this.geocoder.query(this.searchInput);\n    }\n  }\n\n  private addControl() {\n    this.ControlComponent.control = this.geocoder;\n    this.MapService.addControl(\n      this.ControlComponent.control,\n      this.ControlComponent.position\n    );\n  }\n\n  private hookEvents(events: GeocoderEvent) {\n    if (events.results.observers.length) {\n      this.geocoder.on('results', (evt: Results) => this.zone.run(() => events.results.emit(evt)));\n    }\n    if (events.result.observers.length) {\n      this.geocoder.on('result', (evt: { result: Result }) => this.zone.run(() => events.result.emit(evt)));\n    }\n    if (events.error.observers.length) {\n      this.geocoder.on('error', (evt: any) => this.zone.run(() => events.error.emit(evt)));\n    }\n    if (events.loading.observers.length) {\n      this.geocoder.on('loading', (evt: { query: string }) => this.zone.run(() => events.loading.emit(evt)));\n    }\n    if (events.clear.observers.length) {\n      this.geocoder.on('clear', () => this.zone.run(() => events.clear.emit()));\n    }\n\n  }\n}\n","import { Directive, Host, Input, OnInit } from '@angular/core';\nimport { GeolocateControl, FitBoundsOptions } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglGeolocate]'\n})\nexport class GeolocateControlDirective implements OnInit {\n  /* Init inputs */\n  @Input() positionOptions?: PositionOptions;\n  @Input() fitBoundsOptions?: FitBoundsOptions;\n  @Input() trackUserLocation?: boolean;\n  @Input() showUserLocation?: boolean;\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options = {\n        positionOptions: this.positionOptions,\n        fitBoundsOptions: this.fitBoundsOptions,\n        trackUserLocation: this.trackUserLocation,\n        showUserLocation: this.showUserLocation\n      };\n\n      Object.keys(options)\n        .forEach((key: string) => {\n          const tkey = <keyof typeof options>key;\n          if (options[tkey] === undefined) {\n            delete options[tkey];\n          }\n        });\n      this.ControlComponent.control = new GeolocateControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { Directive, OnInit, Host } from '@angular/core';\nimport { NavigationControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglNavigation]'\n})\nexport class NavigationControlDirective implements OnInit {\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      this.ControlComponent.control = new NavigationControl();\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { Directive, Host, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { ScaleControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglScale]'\n})\nexport class ScaleControlDirective implements OnInit, OnChanges {\n  /* Init inputs */\n  @Input() maxWidth?: number;\n\n  /* Dynamic inputs */\n  @Input() unit?: 'imperial' | 'metric' | 'nautical';\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.unit && !changes.unit.isFirstChange()) {\n      (<any>this.ControlComponent.control).setUnit(changes.unit.currentValue);\n    }\n  }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { maxWidth?: number, unit?: string } = {};\n      if (this.maxWidth !== undefined) {\n        options.maxWidth = this.maxWidth;\n      }\n      if (this.unit !== undefined) {\n        options.unit = this.unit;\n      }\n      this.ControlComponent.control = new ScaleControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import {\n    Component,\n    ElementRef,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewChild,\n    AfterViewInit,\n    OnInit,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { LngLatLike, Marker, PointLike } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-marker',\n  template: '<div #content><ng-content></ng-content></div>',\n  styles: [`\n    .mapboxgl-marker {\n      line-height: 0;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MarkerComponent implements OnChanges, OnDestroy, AfterViewInit, OnInit {\n  /* Init input */\n  @Input() offset?: PointLike;\n  @Input() anchor?: 'center' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\n  /* Dynamic input */\n  @Input() feature?: GeoJSON.Feature<GeoJSON.Point>;\n  @Input() lngLat?: LngLatLike;\n\n  @ViewChild('content') content: ElementRef;\n\n  markerInstance?: Marker;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    if (this.feature && this.lngLat) {\n      throw new Error('feature and lngLat input are mutually exclusive');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.lngLat && !changes.lngLat.isFirstChange()) {\n      this.markerInstance!.setLngLat(this.lngLat!);\n    }\n    if (changes.feature && !changes.feature.isFirstChange()) {\n      this.markerInstance!.setLngLat(this.feature!.geometry!.coordinates);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.markerInstance = new Marker(<any>{ offset: this.offset, element: this.content.nativeElement, anchor: this.anchor });\n    this.markerInstance.setLngLat(this.feature ? this.feature.geometry!.coordinates : this.lngLat!);\n    this.MapService.mapCreated$.subscribe(() => {\n      this.MapService.addMarker(this.markerInstance!);\n    });\n  }\n\n  ngOnDestroy() {\n    this.MapService.removeMarker(this.markerInstance!);\n    this.markerInstance = undefined;\n  }\n\n  togglePopup() {\n    this.markerInstance!.togglePopup();\n  }\n\n  updateCoordinates(coordinates: number[]) {\n    this.markerInstance!.setLngLat(coordinates);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { GeoJSONGeometry, GeoJSONSource, GeoJSONSourceOptions } from 'mapbox-gl';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { MapService } from '../../map/map.service';\n\n@Component({\n  selector: 'mgl-geojson-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GeoJSONSourceComponent implements OnInit, OnDestroy, OnChanges, GeoJSONSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() data?: GeoJSON.Feature<GeoJSONGeometry> | GeoJSON.FeatureCollection<GeoJSONGeometry> | string;\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n  @Input() buffer?: number;\n  @Input() tolerance?: number;\n  @Input() cluster?: boolean;\n  @Input() clusterRadius?: number;\n  @Input() clusterMaxZoom?: number;\n\n  updateFeatureData = new Subject();\n\n  private sub: Subscription;\n  private sourceAdded = false;\n  private featureIdCounter = 0;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    if (!this.data) {\n      this.data = {\n        type: 'FeatureCollection',\n        features: []\n      };\n    }\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.MapService.addSource(this.id, {\n        type: 'geojson',\n        data: this.data,\n        maxzoom: this.maxzoom,\n        minzoom: this.minzoom,\n        buffer: this.buffer,\n        tolerance: this.tolerance,\n        cluster: this.cluster,\n        clusterRadius: this.clusterRadius,\n        clusterMaxZoom: this.clusterMaxZoom,\n      });\n      this.sub = this.updateFeatureData.pipe(\n        debounceTime(0)\n      ).subscribe(() => {\n        const source = this.MapService.getSource<GeoJSONSource>(this.id);\n        source.setData(this.data!);\n      });\n      this.sourceAdded = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.maxzoom && !changes.maxzoom.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.buffer && !changes.buffer.isFirstChange() ||\n      changes.tolerance && !changes.tolerance.isFirstChange() ||\n      changes.cluster && !changes.cluster.isFirstChange() ||\n      changes.clusterRadius && !changes.clusterRadius.isFirstChange() ||\n      changes.clusterMaxZoom && !changes.clusterMaxZoom.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n    if (changes.data && !changes.data.isFirstChange()) {\n      const source = this.MapService.getSource<GeoJSONSource>(this.id);\n      source.setData(this.data!);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sourceAdded) {\n      this.sub.unsubscribe();\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  addFeature(feature: GeoJSON.Feature<GeoJSON.GeometryObject>) {\n    const collection = <GeoJSON.FeatureCollection<GeoJSON.GeometryObject>>this.data;\n    collection.features.push(feature);\n    this.updateFeatureData.next();\n  }\n\n  removeFeature(feature: GeoJSON.Feature<GeoJSON.GeometryObject>) {\n    const collection = <GeoJSON.FeatureCollection<GeoJSON.GeometryObject>>this.data;\n    const index = collection.features.indexOf(feature);\n    if (index > -1) {\n      collection.features.splice(index, 1);\n    }\n    this.updateFeatureData.next();\n  }\n\n  getNewFeatureId() {\n    return ++this.featureIdCounter;\n  }\n}\n","import { Component, forwardRef, Inject, Input, OnDestroy, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { GeoJSONSourceComponent } from './geojson-source.component';\n\n@Component({\n  selector: 'mgl-feature',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FeatureComponent implements OnInit, OnDestroy, GeoJSON.Feature<GeoJSON.GeometryObject> {\n  /* Init inputs */\n  @Input() id?: number; // FIXME number only for now https://github.com/mapbox/mapbox-gl-js/issues/2716\n  @Input() geometry: GeoJSON.GeometryObject;\n  @Input() properties: any;\n  type: 'Feature' = 'Feature';\n\n  private feature: GeoJSON.Feature<GeoJSON.GeometryObject>;\n\n  constructor(\n    @Inject(forwardRef(() => GeoJSONSourceComponent)) private GeoJSONSourceComponent: GeoJSONSourceComponent\n  ) { }\n\n  ngOnInit() {\n    if (!this.id) {\n      this.id = this.GeoJSONSourceComponent.getNewFeatureId();\n    }\n    this.feature = {\n      type: this.type,\n      geometry: this.geometry,\n      properties: this.properties ? this.properties : {}\n    };\n    this.feature.id = this.id;\n    this.GeoJSONSourceComponent.addFeature(this.feature);\n  }\n\n  ngOnDestroy() {\n    this.GeoJSONSourceComponent.removeFeature(this.feature);\n  }\n\n  updateCoordinates(coordinates: number[]) {\n    (<GeoJSON.Point>this.feature.geometry).coordinates = coordinates;\n    this.GeoJSONSourceComponent.updateFeatureData.next();\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output\n} from '@angular/core';\nimport { MapMouseEvent } from 'mapbox-gl';\nimport { fromEvent, Observable, ReplaySubject } from 'rxjs';\nimport { filter, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { LayerComponent } from '../layer/layer.component';\nimport { MapService } from '../map/map.service';\nimport { MarkerComponent } from '../marker/marker.component';\nimport { FeatureComponent } from '../source/geojson/feature.component';\n\n@Directive({\n  selector: '[mglDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnDestroy {\n  // tslint:disable-next-line:no-input-rename\n  @Input('mglDraggable') layer?: LayerComponent;\n\n  @Output() dragStart = new EventEmitter<MapMouseEvent>();\n  @Output() dragEnd = new EventEmitter<MapMouseEvent>();\n  @Output() drag = new EventEmitter<MapMouseEvent>();\n\n  private destroyed$: ReplaySubject<void> = new ReplaySubject(1);\n\n  constructor(\n    private MapService: MapService,\n    private NgZone: NgZone,\n    @Optional() @Host() private FeatureComponent?: FeatureComponent,\n    @Optional() @Host() private MarkerComponent?: MarkerComponent\n  ) { }\n\n  ngOnInit() {\n    let enter$;\n    let leave$;\n    let updateCoords;\n    if (this.MarkerComponent) {\n      let markerElement = (<Element>this.MarkerComponent.content.nativeElement);\n      if (markerElement.children.length === 1) {\n        markerElement = markerElement.children[0];\n      }\n      enter$ = fromEvent(markerElement, 'mouseenter');\n      leave$ = fromEvent(markerElement, 'mouseleave');\n      updateCoords = this.MarkerComponent.updateCoordinates.bind(this.MarkerComponent);\n    } else if (this.FeatureComponent && this.layer) {\n      enter$ = this.layer.mouseEnter;\n      leave$ = this.layer.mouseLeave;\n      updateCoords = this.FeatureComponent.updateCoordinates.bind(this.FeatureComponent);\n      if (this.FeatureComponent.geometry.type !== 'Point') {\n        throw new Error('mglDraggable only support point feature');\n      }\n    } else {\n      throw new Error('mglDraggable can only be used on Feature (with a layer as input) or Marker');\n    }\n\n    this.handleDraggable(enter$, leave$, updateCoords);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(undefined);\n    this.destroyed$.complete();\n  }\n\n  private handleDraggable(enter$: Observable<any>, leave$: Observable<any>, updateCoords: (coord: number[]) => void) {\n    let moving = false;\n    let inside = false;\n    this.MapService.mapCreated$.subscribe(() => {\n      const mouseUp$ = fromEvent<MapMouseEvent>(this.MapService.mapInstance, 'mouseup');\n      const dragStart$ = enter$.pipe(\n        takeUntil(this.destroyed$),\n        filter(() => !moving),\n        filter((evt) => this.filterFeature(evt)),\n        tap(() => {\n          inside = true;\n          this.MapService.changeCanvasCursor('move');\n          this.MapService.updateDragPan(false);\n        }),\n        switchMap(() =>\n          fromEvent<MapMouseEvent>(this.MapService.mapInstance, 'mousedown')\n            .pipe(takeUntil(leave$))\n        )\n      );\n      const dragging$ = dragStart$.pipe(\n        switchMap(() => fromEvent<MapMouseEvent>(this.MapService.mapInstance, 'mousemove')\n          .pipe(takeUntil(mouseUp$))\n        )\n      );\n      const dragEnd$ = dragStart$.pipe(\n        switchMap(() => mouseUp$.pipe(take(1)))\n      );\n      dragStart$.subscribe((evt) => {\n        moving = true;\n        if (this.dragStart.observers.length) {\n          this.NgZone.run(() => this.dragStart.emit(evt));\n        }\n      });\n      dragging$.subscribe((evt) => {\n        updateCoords([evt.lngLat.lng, evt.lngLat.lat]);\n        if (this.drag.observers.length) {\n          this.NgZone.run(() => this.drag.emit(evt));\n        }\n      });\n      dragEnd$.subscribe((evt) => {\n        moving = false;\n        if (this.dragEnd.observers.length) {\n          this.NgZone.run(() => this.dragEnd.emit(evt));\n        }\n        if (!inside) { // It's possible to dragEnd outside the target (small input lag)\n          this.MapService.changeCanvasCursor('');\n          this.MapService.updateDragPan(true);\n        }\n      });\n      leave$.pipe(\n        takeUntil(this.destroyed$),\n        tap(() => inside = false),\n        filter(() => !moving)\n      ).subscribe(() => {\n        this.MapService.changeCanvasCursor('');\n        this.MapService.updateDragPan(true);\n      });\n    });\n  }\n\n  private filterFeature(evt: MapMouseEvent) {\n    if (this.FeatureComponent && this.layer) {\n      const feature: GeoJSON.Feature<any> = this.MapService.queryRenderedFeatures(\n        evt.point,\n        {\n          layers: [this.layer.id],\n          filter: [\n            'all',\n            ['==', '$type', 'Point'],\n            ['==', '$id', this.FeatureComponent.id]\n          ]\n        }\n      )[0];\n      if (!feature) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { MapService } from '../map/map.service';\nimport { MapImageData, MapImageOptions } from '../map/map.types';\n\n@Component({\n  selector: 'mgl-image',\n  template: ''\n})\nexport class ImageComponent implements OnInit, OnDestroy, OnChanges {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() data?: MapImageData;\n  @Input() options?: MapImageOptions;\n  @Input() url?: string;\n\n  @Output() error = new EventEmitter<{ status: number }>();\n  @Output() loaded = new EventEmitter<void>();\n\n  private imageAdded = false;\n\n  constructor(\n    private MapService: MapService,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(async () => {\n      if (this.data) {\n        this.MapService.addImage(\n          this.id,\n          this.data,\n          this.options\n        );\n        this.imageAdded = true;\n      } else if (this.url) {\n        try {\n          await this.MapService.loadAndAddImage(\n            this.id,\n            this.url,\n            this.options\n          );\n          this.imageAdded = true;\n          this.zone.run(() => {\n            this.loaded.emit();\n          });\n        } catch (error) {\n          this.zone.run(() => {\n            this.error.emit(error);\n          });\n        }\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.data && !changes.data.isFirstChange() ||\n      changes.options && !changes.options.isFirstChange() ||\n      changes.url && !changes.url.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.imageAdded) {\n      this.MapService.removeImage(this.id);\n    }\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  BackgroundLayout,\n  BackgroundPaint,\n  CircleLayout,\n  CirclePaint,\n  FillExtrusionLayout,\n  FillExtrusionPaint,\n  FillLayout,\n  FillPaint,\n  GeoJSONSource,\n  GeoJSONSourceRaw,\n  ImageSource,\n  Layer,\n  LineLayout,\n  LinePaint,\n  MapMouseEvent,\n  RasterLayout,\n  RasterPaint,\n  RasterSource,\n  SymbolLayout,\n  SymbolPaint,\n  VectorSource,\n  VideoSource\n} from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-layer',\n  template: ''\n})\nexport class LayerComponent implements OnInit, OnDestroy, OnChanges, Layer {\n  /* Init inputs */\n  @Input() id: string;\n  @Input() source?: string | VectorSource | RasterSource | GeoJSONSource | ImageSource | VideoSource | GeoJSONSourceRaw;\n  @Input() type: 'symbol' | 'fill' | 'line' | 'circle' | 'fill-extrusion' | 'raster' | 'background';\n  @Input() metadata?: any;\n  @Input() sourceLayer?: string;\n\n  /* Dynamic inputs */\n  @Input() filter?: any[];\n  @Input() layout?: BackgroundLayout | FillLayout | FillExtrusionLayout | LineLayout | SymbolLayout | RasterLayout | CircleLayout;\n  @Input() paint?: BackgroundPaint | FillPaint | FillExtrusionPaint | LinePaint | SymbolPaint | RasterPaint | CirclePaint;\n  @Input() before?: string;\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n\n  @Output() click = new EventEmitter<MapMouseEvent>();\n  @Output() mouseEnter = new EventEmitter<MapMouseEvent>();\n  @Output() mouseLeave = new EventEmitter<MapMouseEvent>();\n  @Output() mouseMove = new EventEmitter<MapMouseEvent>();\n\n  private layerAdded = false;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.MapService.addLayer({\n        layerOptions: {\n          id: this.id,\n          type: this.type,\n          source: this.source,\n          metadata: this.metadata,\n          'source-layer': this.sourceLayer,\n          minzoom: this.minzoom,\n          maxzoom: this.maxzoom,\n          filter: this.filter,\n          layout: this.layout,\n          paint: this.paint\n        },\n        layerEvents: {\n          click: this.click,\n          mouseEnter: this.mouseEnter,\n          mouseLeave: this.mouseLeave,\n          mouseMove: this.mouseMove\n        }\n      }, this.before);\n      this.layerAdded = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.layerAdded) {\n      return;\n    }\n    if (changes.paint && !changes.paint.isFirstChange()) {\n      this.MapService.setAllLayerPaintProperty(this.id, changes.paint.currentValue!);\n    }\n    if (changes.layout && !changes.layout.isFirstChange()) {\n      this.MapService.setAllLayerLayoutProperty(this.id, changes.layout.currentValue!);\n    }\n    if (changes.filter && !changes.filter.isFirstChange()) {\n      this.MapService.setLayerFilter(this.id, changes.filter.currentValue!);\n    }\n    if (changes.before && !changes.before.isFirstChange()) {\n      this.MapService.setLayerBefore(this.id, changes.before.currentValue!);\n    }\n    if (\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange()\n    ) {\n      this.MapService.setLayerZoomRange(this.id, this.minzoom, this.maxzoom);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.layerAdded) {\n      this.MapService.removeLayer(this.id);\n    }\n  }\n}\n","import {\n  AnimationOptions,\n  EventData,\n  LngLatBoundsLike,\n  LngLatLike,\n  Map,\n  MapBoxZoomEvent,\n  MapMouseEvent,\n  MapTouchEvent,\n  PaddingOptions,\n  PointLike,\n  Style\n  } from 'mapbox-gl';\nimport { MapService, MovingOptions } from './map.service';\nimport { MapEvent } from './map.types';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\n\ndeclare global {\n  namespace mapboxgl {\n    export interface MapboxOptions {\n      failIfMajorPerformanceCaveat?: boolean;\n      transformRequest?: Function;\n      localIdeographFontFamily?: string;\n      pitchWithRotate?: boolean;\n    }\n  }\n}\n\n@Component({\n  selector: 'mgl-map',\n  template: '<div #container></div>',\n  styles: [`\n  :host {\n    display: block;\n  }\n  div {\n    height: 100%;\n    width: 100%;\n  }\n  `],\n  providers: [\n    MapService\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapComponent implements OnChanges, OnDestroy, AfterViewInit, MapEvent {\n  /* Init inputs */\n  @Input() accessToken?: string;\n  @Input() customMapboxApiUrl?: string;\n  @Input() hash?: boolean;\n  @Input() refreshExpiredTiles?: boolean;\n  @Input() failIfMajorPerformanceCaveat?: boolean;\n  @Input() classes?: string[];\n  @Input() bearingSnap?: number;\n  @Input() interactive?: boolean;\n  @Input() pitchWithRotate?: boolean;\n  @Input() attributionControl?: boolean;\n  @Input() logoPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  @Input() maxTileCacheSize?: number;\n  @Input() localIdeographFontFamily?: string;\n  @Input() preserveDrawingBuffer?: boolean;\n  @Input() renderWorldCopies?: boolean;\n  @Input() trackResize?: boolean;\n  @Input() transformRequest?: Function;\n\n  /* Dynamic inputs */\n  @Input() minZoom?: number;\n  @Input() maxZoom?: number;\n  @Input() scrollZoom?: boolean;\n  @Input() dragRotate?: boolean;\n  @Input() touchZoomRotate?: boolean;\n  @Input() doubleClickZoom?: boolean;\n  @Input() keyboard?: boolean;\n  @Input() dragPan?: boolean;\n  @Input() boxZoom?: boolean;\n  @Input() style: Style | string;\n  @Input() center?: LngLatLike;\n  @Input() maxBounds?: LngLatBoundsLike;\n  @Input() zoom?: [number];\n  @Input() bearing?: [number];\n  @Input() pitch?: [number];\n\n  /* Added by ngx-mapbox-gl */\n  @Input() movingMethod: 'jumpTo' | 'easeTo' | 'flyTo' = 'flyTo';\n  @Input() movingOptions?: MovingOptions;\n  @Input() fitBounds?: LngLatBoundsLike;\n  @Input() fitBoundsOptions?: {\n    linear?: boolean,\n    easing?: Function,\n    padding?: number | PaddingOptions,\n    offset?: PointLike,\n    maxZoom?: number\n  };\n  @Input() centerWithPanTo?: boolean;\n  @Input() panToOptions?: AnimationOptions;\n  @Input() cursorStyle?: string;\n\n  @Output() resize = new EventEmitter<void>();\n  @Output() remove = new EventEmitter<void>();\n  @Output() mouseDown = new EventEmitter<MapMouseEvent>();\n  @Output() mouseUp = new EventEmitter<MapMouseEvent>();\n  @Output() mouseMove = new EventEmitter<MapMouseEvent>();\n  @Output() click = new EventEmitter<MapMouseEvent>();\n  @Output() dblClick = new EventEmitter<MapMouseEvent>();\n  @Output() mouseEnter = new EventEmitter<MapMouseEvent>();\n  @Output() mouseLeave = new EventEmitter<MapMouseEvent>();\n  @Output() mouseOver = new EventEmitter<MapMouseEvent>();\n  @Output() mouseOut = new EventEmitter<MapMouseEvent>();\n  @Output() contextMenu = new EventEmitter<MapMouseEvent>();\n  @Output() touchStart = new EventEmitter<MapTouchEvent>();\n  @Output() touchEnd = new EventEmitter<MapTouchEvent>();\n  @Output() touchMove = new EventEmitter<MapTouchEvent>();\n  @Output() touchCancel = new EventEmitter<MapTouchEvent>();\n  @Output() wheel = new EventEmitter<any>(); // TODO MapWheelEvent\n  @Output() moveStart = new EventEmitter<DragEvent>(); // TODO Check type\n  @Output() move = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() moveEnd = new EventEmitter<DragEvent>();\n  @Output() dragStart = new EventEmitter<DragEvent>();\n  @Output() drag = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() dragEnd = new EventEmitter<DragEvent>();\n  @Output() zoomStart = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() zoomEvt = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() zoomEnd = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotateStart = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotate = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotateEnd = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() pitchStart = new EventEmitter<EventData>();\n  @Output() pitchEvt = new EventEmitter<EventData>();\n  @Output() pitchEnd = new EventEmitter<EventData>();\n  @Output() boxZoomStart = new EventEmitter<MapBoxZoomEvent>();\n  @Output() boxZoomEnd = new EventEmitter<MapBoxZoomEvent>();\n  @Output() boxZoomCancel = new EventEmitter<MapBoxZoomEvent>();\n  @Output() webGlContextLost = new EventEmitter<void>();\n  @Output() webGlContextRestored = new EventEmitter<void>();\n  @Output() load = new EventEmitter<any>();\n  @Output() render = new EventEmitter<void>();\n  @Output() error = new EventEmitter<any>(); // TODO Check type\n  @Output() data = new EventEmitter<EventData>();\n  @Output() styleData = new EventEmitter<EventData>();\n  @Output() sourceData = new EventEmitter<EventData>();\n  @Output() dataLoading = new EventEmitter<EventData>();\n  @Output() styleDataLoading = new EventEmitter<EventData>();\n  @Output() sourceDataLoading = new EventEmitter<EventData>();\n\n  get mapInstance(): Map {\n    return this.MapService.mapInstance;\n  }\n\n  @ViewChild('container') mapContainer: ElementRef;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngAfterViewInit() {\n    this.MapService.setup({\n      accessToken: this.accessToken,\n      customMapboxApiUrl: this.customMapboxApiUrl,\n      mapOptions: {\n        container: this.mapContainer.nativeElement,\n        minZoom: this.minZoom,\n        maxZoom: this.maxZoom,\n        style: this.style,\n        hash: this.hash,\n        interactive: this.interactive,\n        bearingSnap: this.bearingSnap,\n        pitchWithRotate: this.pitchWithRotate,\n        classes: this.classes,\n        attributionControl: this.attributionControl,\n        logoPosition: this.logoPosition,\n        failIfMajorPerformanceCaveat: this.failIfMajorPerformanceCaveat,\n        preserveDrawingBuffer: this.preserveDrawingBuffer,\n        refreshExpiredTiles: this.refreshExpiredTiles,\n        maxBounds: this.maxBounds,\n        scrollZoom: this.scrollZoom,\n        boxZoom: this.boxZoom,\n        dragRotate: this.dragRotate,\n        dragPan: this.dragPan,\n        keyboard: this.keyboard,\n        doubleClickZoom: this.doubleClickZoom,\n        touchZoomRotate: this.touchZoomRotate,\n        trackResize: this.trackResize,\n        center: this.center,\n        zoom: this.zoom,\n        bearing: this.bearing,\n        pitch: this.pitch,\n        renderWorldCopies: this.renderWorldCopies,\n        maxTileCacheSize: this.maxTileCacheSize,\n        localIdeographFontFamily: this.localIdeographFontFamily,\n        transformRequest: this.transformRequest\n      },\n      mapEvents: this\n    });\n    if (this.cursorStyle) {\n      this.MapService.changeCanvasCursor(this.cursorStyle);\n    }\n  }\n\n  ngOnDestroy() {\n    this.MapService.destroyMap();\n  }\n\n  async ngOnChanges(changes: SimpleChanges) {\n    await this.MapService.mapCreated$.toPromise();\n    if (changes.cursorStyle && !changes.cursorStyle.isFirstChange()) {\n      this.MapService.changeCanvasCursor(changes.cursorStyle.currentValue);\n    }\n    if (changes.minZoom && !changes.minZoom.isFirstChange()) {\n      this.MapService.updateMinZoom(changes.minZoom.currentValue);\n    }\n    if (changes.maxZoom && !changes.maxZoom.isFirstChange()) {\n      this.MapService.updateMaxZoom(changes.maxZoom.currentValue);\n    }\n    if (changes.scrollZoom && !changes.scrollZoom.isFirstChange()) {\n      this.MapService.updateScrollZoom(changes.scrollZoom.currentValue);\n    }\n    if (changes.dragRotate && !changes.dragRotate.isFirstChange()) {\n      this.MapService.updateDragRotate(changes.dragRotate.currentValue);\n    }\n    if (changes.touchZoomRotate && !changes.touchZoomRotate.isFirstChange()) {\n      this.MapService.updateTouchZoomRotate(changes.touchZoomRotate.currentValue);\n    }\n    if (changes.doubleClickZoom && !changes.doubleClickZoom.isFirstChange()) {\n      this.MapService.updateDoubleClickZoom(changes.doubleClickZoom.currentValue);\n    }\n    if (changes.keyboard && !changes.keyboard.isFirstChange()) {\n      this.MapService.updateKeyboard(changes.keyboard.currentValue);\n    }\n    if (changes.dragPan && !changes.dragPan.isFirstChange()) {\n      this.MapService.updateDragPan(changes.dragPan.currentValue);\n    }\n    if (changes.boxZoom && !changes.boxZoom.isFirstChange()) {\n      this.MapService.updateBoxZoom(changes.boxZoom.currentValue);\n    }\n    if (changes.style && !changes.style.isFirstChange()) {\n      this.MapService.updateStyle(changes.style.currentValue);\n    }\n    if (changes.maxBounds && !changes.maxBounds.isFirstChange()) {\n      this.MapService.updateMaxBounds(changes.maxBounds.currentValue);\n    }\n    if (changes.fitBounds && !changes.fitBounds.isFirstChange()) {\n      this.MapService.fitBounds(changes.fitBounds.currentValue, this.fitBoundsOptions);\n    }\n    if (\n      this.centerWithPanTo &&\n      changes.center && !changes.center.isFirstChange() &&\n      !changes.zoom && !changes.bearing && !changes.pitch\n    ) {\n      this.MapService.panTo(this.center!, this.panToOptions);\n    } else if (\n      changes.center && !changes.center.isFirstChange() ||\n      changes.zoom && !changes.zoom.isFirstChange() ||\n      changes.bearing && !changes.bearing.isFirstChange() ||\n      changes.pitch && !changes.pitch.isFirstChange()\n    ) {\n      this.MapService.move(\n        this.movingMethod,\n        this.movingOptions,\n        changes.zoom && this.zoom ? this.zoom[0] : undefined,\n        changes.center ? this.center : undefined,\n        changes.bearing && this.bearing ? this.bearing[0] : undefined,\n        changes.pitch && this.pitch ? this.pitch[0] : undefined\n      );\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport { fromEvent, merge, Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport supercluster, { Cluster, Options as SuperclusterOptions, Supercluster } from 'supercluster';\nimport { MapService } from '../map/map.service';\n\n@Directive({ selector: 'ng-template[mglPoint]' })\nexport class PointDirective { }\n\n@Directive({ selector: 'ng-template[mglClusterPoint]' })\nexport class ClusterPointDirective { }\n\n@Component({\n  selector: 'mgl-marker-cluster',\n  template: `\n    <ng-container *ngFor=\"let feature of clusterPoints\">\n      <ng-container *ngIf=\"feature.properties.cluster; else point\">\n        <mgl-marker\n          [feature]=\"feature\"\n        >\n          <ng-container *ngTemplateOutlet=\"clusterPointTpl; context: {\n            $implicit: feature,\n            getLeavesFn: getLeavesFn(feature),\n            getChildrenFn: getChildrenFn(feature),\n            getClusterExpansionZoomFn: getClusterExpansionZoomFn(feature)\n          }\"></ng-container>\n        </mgl-marker>\n      </ng-container>\n      <ng-template #point>\n        <mgl-marker\n          [feature]=\"feature\"\n        >\n          <ng-container *ngTemplateOutlet=\"pointTpl; context: { $implicit: feature }\"></ng-container>\n        </mgl-marker>\n      </ng-template>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false\n})\nexport class MarkerClusterComponent implements OnChanges, OnDestroy, AfterContentInit, OnInit {\n  /* Init input */\n  @Input() radius?: number;\n  @Input() maxZoom?: number;\n  @Input() minZoom?: number;\n  @Input() extent?: number;\n  @Input() nodeSize?: number;\n  @Input() log?: boolean;\n  @Input() reduce?: (accumulated: any, props: any) => void;\n  @Input() initial?: () => any;\n  @Input() map?: (props: any) => any;\n\n  /* Dynamic input */\n  @Input() data: GeoJSON.FeatureCollection<GeoJSON.Point>;\n\n  @Output() load = new EventEmitter<Supercluster>();\n\n  @ContentChild(PointDirective, { read: TemplateRef }) pointTpl: TemplateRef<any>;\n  @ContentChild(ClusterPointDirective, { read: TemplateRef }) clusterPointTpl: TemplateRef<any>;\n\n  clusterPoints: GeoJSON.Feature<GeoJSON.Point>[];\n\n  private supercluster: Supercluster;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService,\n    private ChangeDetectorRef: ChangeDetectorRef,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    const options: SuperclusterOptions = {\n      radius: this.radius,\n      maxZoom: this.maxZoom,\n      minZoom: this.minZoom,\n      extent: this.extent,\n      nodeSize: this.nodeSize,\n      log: this.log,\n      reduce: this.reduce,\n      initial: this.initial,\n      map: this.map\n    };\n    Object.keys(options)\n      .forEach((key: string) => {\n        const tkey = <keyof SuperclusterOptions>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n    this.supercluster = supercluster(options);\n    this.supercluster.load(this.data.features);\n    this.load.emit(this.supercluster);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.data && !changes.data.isFirstChange()) {\n      this.supercluster.load(this.data.features);\n    }\n  }\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      const mapMove$ = merge(\n        fromEvent(this.MapService.mapInstance, 'zoomChange'),\n        fromEvent(this.MapService.mapInstance, 'move')\n      );\n      const sub = mapMove$.pipe(\n        startWith<any>(undefined)\n      ).subscribe(() => {\n        this.zone.run(() => {\n          this.updateCluster();\n        });\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getLeavesFn = (feature: Cluster) => {\n    return (limit?: number, offset?: number) => (<any>this.supercluster.getLeaves)(feature.properties.cluster_id!, limit, offset);\n  }\n\n  getChildrenFn = (feature: Cluster) => {\n    return () => (<any>this.supercluster.getChildren)(feature.properties.cluster_id!);\n  }\n\n  getClusterExpansionZoomFn = (feature: Cluster) => {\n    return () => (<any>this.supercluster.getClusterExpansionZoom)(feature.properties.cluster_id!);\n  }\n\n  private updateCluster() {\n    const bbox = this.MapService.getCurrentViewportBbox();\n    const currentZoom = Math.round(this.MapService.mapInstance.getZoom());\n    this.clusterPoints = this.supercluster.getClusters(bbox, currentZoom);\n    this.ChangeDetectorRef.markForCheck();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewChild,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { PointLike, Popup, LngLatLike } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { MarkerComponent } from '../marker/marker.component';\n\n@Component({\n  selector: 'mgl-popup',\n  template: '<div #content><ng-content></ng-content></div>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopupComponent implements OnChanges, OnDestroy, AfterViewInit, OnInit {\n  /* Init input */\n  @Input() closeButton?: boolean;\n  @Input() closeOnClick?: boolean;\n  @Input() anchor?: 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left';\n  @Input() offset?: number | PointLike | { [anchor: string]: [number, number] };\n\n  /* Dynamic input */\n  @Input() lngLat?: LngLatLike;\n  @Input() marker?: MarkerComponent;\n\n  @Output() close = new EventEmitter<void>();\n  @Output() open = new EventEmitter<void>();\n\n  @ViewChild('content') content: ElementRef;\n\n  popupInstance?: Popup;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    if (this.lngLat && this.marker) {\n      throw new Error('marker and lngLat input are mutually exclusive');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.lngLat && !changes.lngLat.isFirstChange()) {\n      this.MapService.removePopupFromMap(this.popupInstance!);\n      const popupInstanceTmp = this.createPopup();\n      this.MapService.addPopupToMap(popupInstanceTmp, changes.lngLat.currentValue);\n      this.popupInstance = popupInstanceTmp;\n    }\n    if (changes.marker && !changes.marker.isFirstChange()) {\n      const previousMarker: MarkerComponent = changes.marker.previousValue;\n      if (previousMarker.markerInstance) {\n        this.MapService.removePopupFromMarker(previousMarker.markerInstance);\n      }\n      if (this.marker && this.marker.markerInstance && this.popupInstance) {\n        this.MapService.addPopupToMarker(this.marker.markerInstance, this.popupInstance);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    this.popupInstance = this.createPopup();\n    this.addPopup(this.popupInstance);\n  }\n\n  ngOnDestroy() {\n    if (this.popupInstance) {\n      if (this.lngLat) {\n        this.MapService.removePopupFromMap(this.popupInstance);\n      } else if (this.marker && this.marker.markerInstance) {\n        this.MapService.removePopupFromMarker(this.marker.markerInstance);\n      }\n    }\n    this.popupInstance = undefined;\n  }\n\n  private createPopup() {\n    return this.MapService.createPopup({\n      popupOptions: {\n        closeButton: this.closeButton,\n        closeOnClick: this.closeOnClick,\n        anchor: this.anchor,\n        offset: this.offset\n      },\n      popupEvents: {\n        open: this.open,\n        close: this.close\n      }\n    }, this.content.nativeElement);\n  }\n\n  private addPopup(popup: Popup) {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.lngLat) {\n        this.MapService.addPopupToMap(popup, this.lngLat);\n      } else if (this.marker && this.marker.markerInstance) {\n        this.MapService.addPopupToMarker(this.marker.markerInstance, popup);\n      } else {\n        throw new Error('mgl-popup need either lngLat or marker to be set');\n      }\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CanvasSourceOptions } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-canvas-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CanvasSourceComponent implements OnInit, OnDestroy, OnChanges, CanvasSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() coordinates: number[][];\n  @Input() canvas: string;\n  @Input() animate?: boolean;\n\n  private sourceAdded = false;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      const source = {\n        type: 'canvas',\n        coordinates: this.coordinates,\n        canvas: this.canvas,\n        animate: this.animate,\n      };\n      this.MapService.addSource(this.id, source);\n      this.sourceAdded = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.coordinates && !changes.coordinates.isFirstChange() ||\n      changes.canvas && !changes.canvas.isFirstChange() ||\n      changes.animate && !changes.animate.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { ImageSourceOptions } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-image-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageSourceComponent implements OnInit, OnDestroy, OnChanges, ImageSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url: string;\n  @Input() coordinates: number[][];\n\n  private sourceAdded = false;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.MapService.addSource(this.id, {\n        type: 'image',\n        url: this.url,\n        coordinates: this.coordinates\n      });\n      this.sourceAdded = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.url && !changes.url.isFirstChange() ||\n      changes.coordinates && !changes.coordinates.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { RasterSource } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-raster-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RasterSourceComponent implements OnInit, OnDestroy, OnChanges, RasterSource {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url: string;\n  @Input() tiles?: string[];\n  @Input() bounds?: number[];\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n  @Input() tileSize?: number;\n\n  type: 'raster' = 'raster'; // Just to make ts happy\n\n  private sourceAdded = false;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      const source = {\n        type: this.type,\n        url: this.url,\n        tiles: this.tiles,\n        bounds: this.bounds,\n        minzoom: this.minzoom,\n        maxzoom: this.maxzoom,\n        tileSize: this.tileSize\n      };\n      this.MapService.addSource(this.id, source);\n      this.sourceAdded = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.url && !changes.url.isFirstChange() ||\n      changes.tiles && !changes.tiles.isFirstChange() ||\n      changes.bounds && !changes.bounds.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange() ||\n      changes.tileSize && !changes.tileSize.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { VectorSource } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-vector-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VectorSourceComponent implements OnInit, OnDestroy, OnChanges, VectorSource {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url?: string;\n  @Input() tiles?: string[];\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n\n  type: 'vector' = 'vector'; // Just to make ts happy\n\n  private sourceAdded = false;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.MapService.addSource(this.id, {\n        type: this.type,\n        url: this.url,\n        tiles: this.tiles,\n        minzoom: this.minzoom,\n        maxzoom: this.maxzoom,\n      });\n      this.sourceAdded = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.url && !changes.url.isFirstChange() ||\n      changes.tiles && !changes.tiles.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { VideoSourceOptions } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-video-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VideoSourceComponent implements OnInit, OnDestroy, OnChanges, VideoSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() urls: string[];\n  @Input() coordinates: number[][];\n\n  private sourceAdded = false;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.MapService.addSource(this.id, {\n        type: 'video',\n        urls: this.urls,\n        coordinates: this.coordinates\n      });\n      this.sourceAdded = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.urls && !changes.urls.isFirstChange() ||\n      changes.coordinates && !changes.coordinates.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { AttributionControlDirective } from './control/attribution-control.directive';\nimport { ControlComponent } from './control/control.component';\nimport { FullscreenControlDirective } from './control/fullscreen-control.directive';\nimport { GeocoderControlDirective, MAPBOX_GEOCODER_API_KEY } from './control/geocoder-control.directive';\nimport { GeolocateControlDirective } from './control/geolocate-control.directive';\nimport { NavigationControlDirective } from './control/navigation-control.directive';\nimport { ScaleControlDirective } from './control/scale-control.directive';\nimport { DraggableDirective } from './draggable/draggable.directive';\nimport { ImageComponent } from './image/image.component';\nimport { LayerComponent } from './layer/layer.component';\nimport { MapComponent } from './map/map.component';\nimport { MAPBOX_API_KEY } from './map/map.service';\nimport { ClusterPointDirective, MarkerClusterComponent, PointDirective } from './marker-cluster/marker-cluster.component';\nimport { MarkerComponent } from './marker/marker.component';\nimport { PopupComponent } from './popup/popup.component';\nimport { CanvasSourceComponent } from './source/canvas-source.component';\nimport { FeatureComponent } from './source/geojson/feature.component';\nimport { GeoJSONSourceComponent } from './source/geojson/geojson-source.component';\nimport { ImageSourceComponent } from './source/image-source.component';\nimport { RasterSourceComponent } from './source/raster-source.component';\nimport { VectorSourceComponent } from './source/vector-source.component';\nimport { VideoSourceComponent } from './source/video-source.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    MapComponent,\n    LayerComponent,\n    DraggableDirective,\n    ImageComponent,\n    VectorSourceComponent,\n    GeoJSONSourceComponent,\n    RasterSourceComponent,\n    ImageSourceComponent,\n    VideoSourceComponent,\n    CanvasSourceComponent,\n    FeatureComponent,\n    MarkerComponent,\n    PopupComponent,\n    ControlComponent,\n    FullscreenControlDirective,\n    NavigationControlDirective,\n    GeocoderControlDirective,\n    GeolocateControlDirective,\n    AttributionControlDirective,\n    ScaleControlDirective,\n    PointDirective,\n    ClusterPointDirective,\n    MarkerClusterComponent\n  ],\n  exports: [\n    MapComponent,\n    LayerComponent,\n    DraggableDirective,\n    ImageComponent,\n    VectorSourceComponent,\n    GeoJSONSourceComponent,\n    RasterSourceComponent,\n    ImageSourceComponent,\n    VideoSourceComponent,\n    CanvasSourceComponent,\n    FeatureComponent,\n    MarkerComponent,\n    PopupComponent,\n    ControlComponent,\n    FullscreenControlDirective,\n    NavigationControlDirective,\n    GeocoderControlDirective,\n    GeolocateControlDirective,\n    AttributionControlDirective,\n    ScaleControlDirective,\n    PointDirective,\n    ClusterPointDirective,\n    MarkerClusterComponent\n  ]\n})\nexport class NgxMapboxGLModule {\n  static withConfig(config: { accessToken: string, geocoderAccessToken?: string }): ModuleWithProviders {\n    return {\n      ngModule: NgxMapboxGLModule,\n      providers: [\n        {\n          provide: MAPBOX_API_KEY,\n          useValue: config.accessToken\n        },\n        {\n          provide: MAPBOX_GEOCODER_API_KEY,\n          useValue: config.geocoderAccessToken || config.accessToken\n        }\n      ],\n    };\n  }\n}\n"]}